{"version":3,"sources":["components/Button.js","context/AuthContext.js","components/Navbar.js","components/CardItem.js","components/SignUpCards.js","components/HeroSection.js","components/Footer.js","pages/Home.js","api/axios.js","pages/RequestService.js","pages/RequestServiceConfirmation.js","pages/RequestServiceResult.js","pages/ServiceReceipt.js","components/LoginCards.js","pages/Login.js","context/StatusContext.js","pages/LoginMotorist.js","pages/LoginAP.js","pages/SignUp.js","components/PaymentForm.js","pages/SignUpMotorist.js","pages/SignUpAP.js","pages/ServiceRequestMember.js","pages/ServiceRequestCustomer.js","components/AboutSection.js","components/AboutUsCard.js","pages/AboutUs.js","components/UserManualCard.js","pages/UserManuals.js","pages/HowItWorks.js","components/Team.js","pages/MeetTheTeam.js","components/account/AccountProfile.js","components/account/AccountDetails.js","components/account/Account.js","components/Receipts.js","pages/MotoristDashboard.js","components/AvailableJobs.js","pages/APDashboard.js","components/Theme.js","App.js","index.js"],"names":["STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","linkto","checkButtonStyle","includes","checkButtonSize","to","className","AuthContext","createContext","isAuth","userType","login","logout","checkIsLoggedIn","AuthContextProvider","useState","setisAuth","setUserType","sessionStorage","getItem","Provider","value","removeItem","Navbar","click","setClick","button","setButton","useContext","closeMobileMenu","window","setInterval","showButton","innerWidth","useEffect","addEventListener","src","alt","CardItem","props","path","text","SignUpCards","scrollTo","HeroSection","autoPlay","loop","muted","Footer","name","placeholder","href","target","aria-label","Home","axios","create","baseURL","nameReg","LoginSchema","Yup","shape","firstName","required","matches","lastName","phoneNumber","min","max","RequestService","errMsg","setErrMsg","success","setSuccess","Object","keys","user","JSON","parse","form","values","errors","touched","handleChange","handleSubmit","isSubmitting","Box","component","onSubmit","sx","mt","mb","Grid","container","spacing","item","xs","sm","TextField","id","label","helperText","error","Boolean","margin","variant","fullWidth","onChange","inputProps","maxLength","disabled","padding","justifyContent","Link","CssBaseline","Container","maxWidth","Paper","my","md","p","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","Alert","severity","initialValues","setSubmitting","post","then","savedMember","data","setItem","stringify","catch","err","console","log","message","submitForm","validationSchema","RequestServiceConfirmation","service","resubmitService","newService","serviceID","res","result","docs","newAP","assistProfID","location","setTimeout","reload","onload","gutterBottom","callOutFee","CircularProgress","color","RequestServiceResult","ap","commission","serviceTypePrice","apPayment","ml","serviceType","assistProfRating","apRating","rating","paymentController","motoristID","paymentType","amountDue","paidToAP","commissionFee","newReceiptID","ServiceReceipt","dateNow","Date","toLocaleString","totalAmountDue","receiptID","amountPaid","paymentDate","servicePurchased","motoristReceipt","doc","submitReceipt","LoginCards","Login","StatusContext","status","handlestatus","StatusContextProvider","setstatus","email","password","LoginMotorist","FormControlLabel","control","Checkbox","height","elevation","square","mx","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","LoginAP","SignUp","PaymentForm","InputLabelProps","shrink","SignUpSchema","dob","transform","originalValue","isDate","SignUpMotorist","RadioButton","field","style","Radio","checked","htmlFor","RadioButtonGroup","gender","toISOString","split","alignSelf","SignUpAP","streetReg","RequestFormSchema","streetName","streetNum","suburb","crossRoad1","crossRoad2","plateNumber","manufacturer","model","year","body_type","colour","ServiceRequestMember","select","MenuItem","nearestCrossroadArr","ServiceRequestCustomer","AboutSection","AboutUsCard","AboutUs","UserManualCard","pathname","UserManuals","steps","description","HowItWorks","React","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","Fragment","maxwidth","borderRadius","Stepper","orientation","map","step","index","Step","key","StepLabel","optional","StepContent","mr","length","members","flag","course","Team","flexGrow","py","member","width","wrap","MeetTheTeam","stringToColour","string","i","hash","charCodeAt","toString","slice","AccountProfile","Card","CardContent","Divider","AccountProfileDetails","EDIT_URL","autoComplete","CardHeader","subheader","title","size","put","_id","Account","lg","Receipts","smUser","List","receipts","list","ListItem","ListItemAvatar","fontSize","ListItemText","primary","secondary","MotoristDashboard","AvailableJobs","apUser","availableJobs","distanceFromAP","jobID","list_id","APDashboard","Theme","createTheme","components","MuiBox","styleOverrides","root","boxShadow","MuiCard","MuiPaper","MuiAlert","MuiButton","defaultProps","disableElevation","textTransform","sizeSmall","sizeMedium","sizeLarge","textSizeSmall","textSizeMedium","textSizeLarge","palette","main","typography","fontFamily","body1","fontWeight","lineHeight","body2","subtitle1","subtitle2","overline","letterSpacing","caption","h1","h2","h3","h4","h5","h6","App","ThemeProvider","theme","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f1c4b3.chunk.js","sourcesContent":["/* Custom css button to be used across the app */   \r\n\r\nimport React from \"react\";\r\nimport \"./Button.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const STYLES = [\"btn--primary\", \"btn--outline\", \"btn--test\", \"btn--filled\"];\r\nexport const SIZES = [\"btn--medium\", \"btn--large\"];\r\n\r\nexport const Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize,\r\n    linkto,\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle)\r\n        ? buttonStyle\r\n        : STYLES[0];\r\n\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    return (\r\n        <Link to={`${linkto}`} className=\"btn-mobile\">\r\n            <button\r\n                className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n                onClick={onClick}\r\n                type={type}\r\n            >\r\n                {children}\r\n            </button>\r\n        </Link>\r\n    );\r\n};\r\n","/* To control whether the user is authenticated or not we make use of the context provider.\r\nThis can be used globally across the app */ \r\n\r\nimport React, { createContext, useState } from \"react\";\r\n\r\nconst AuthContext = createContext({\r\n  isAuth: false,\r\n  userType: '',\r\n  login: () => {},\r\n  logout: () => {},\r\n  checkIsLoggedIn: () => {},\r\n});\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [isAuth, setisAuth] = useState(false);\r\n  const [userType, setUserType] = useState();\r\n\r\n  const checkIsLoggedIn = () => {\r\n    if (sessionStorage.getItem('member')){\r\n      setisAuth(true);\r\n      setUserType('member');\r\n    }\r\n    else if (sessionStorage.getItem('ap')){\r\n      setisAuth(true);\r\n      setUserType('ap');\r\n    }\r\n    else \r\n      setisAuth(false); \r\n  };\r\n  \r\n  const login = () => {\r\n    checkIsLoggedIn(); \r\n    setisAuth(true); \r\n  };\r\n\r\n  const logout = () => {\r\n    setisAuth(false); \r\n    sessionStorage.removeItem(userType); \r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuth, userType, login, logout, checkIsLoggedIn }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContextProvider, AuthContext };","/* Navigation bar component which spans across the top of the page */\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { Button } from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navbar.css\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst Navbar = () => {\r\n    const [click, setClick] = useState(false);\r\n    const [button, setButton] = useState(true);\r\n    const { logout, checkIsLoggedIn, isAuth, userType } = useContext(AuthContext);\r\n\r\n    const handleClick = () => setClick(!click);\r\n    const closeMobileMenu = () => setClick(false);\r\n\r\n    // constantly check if the user is logged in (to change navbar items)\r\n    window.setInterval(function () {\r\n        checkIsLoggedIn();\r\n    }, 500);\r\n\r\n    // function to change the login to logout and vice versa    \r\n    const getButton = () => {\r\n        if (isAuth)\r\n            return (\r\n                <Button buttonStyle=\"btn--outline\" linkto=\"/\" onClick={logout}>\r\n                    Log out\r\n                </Button>\r\n            );\r\n        else\r\n            return (\r\n                <Button buttonStyle=\"btn--outline\" linkto=\"/signup\">\r\n                    Sign Up\r\n                </Button>\r\n            );\r\n    };\r\n\r\n    // show the hamburger icon if within mobile viewport\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n            setButton(false);\r\n        } else {\r\n            setButton(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        showButton();\r\n    }, []);\r\n\r\n    window.addEventListener(\"resize\", showButton);\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar-container\">\r\n                    <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n                        <img src={\"images/logo.png\"} alt=\"logo\" />\r\n                    </Link>\r\n                    <div className=\"menu-icon\" onClick={handleClick}>\r\n                        <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n                    </div>\r\n                    <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/about-us\"\r\n                                className=\"nav-links\"\r\n                                onClick={closeMobileMenu}\r\n                            >\r\n                                About Us\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link\r\n                                to=\"/service-request\"\r\n                                className=\"nav-links\"\r\n                                onClick={closeMobileMenu}\r\n                            >\r\n                                Request Service\r\n                            </Link>\r\n                        </li>\r\n                        {!isAuth ? (\r\n                            <li className=\"nav-item\">\r\n                                <Link\r\n                                    to=\"/login\"\r\n                                    className=\"nav-links\"\r\n                                    onClick={closeMobileMenu}\r\n                                >\r\n                                    Login\r\n                                </Link>\r\n                            </li>\r\n                        ) : (\r\n                            <li className=\"nav-item\">\r\n                                <Link\r\n                                    to={`/${userType}-dashboard`}\r\n                                    className=\"nav-links\"\r\n                                    onClick={closeMobileMenu}\r\n                                >\r\n                                    Dashboard\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                        {!isAuth ? (\r\n                            <li className=\"nav-item\">\r\n                                <Link\r\n                                    to=\"/signup\"\r\n                                    className=\"nav-links-mobile\"\r\n                                    onClick={closeMobileMenu}\r\n                                >\r\n                                    Sign up\r\n                                </Link>\r\n                            </li>\r\n                        ) : (\r\n                            <li className=\"nav-item\">\r\n                                <Link\r\n                                    to=\"/\"\r\n                                    className=\"nav-links-mobile\"\r\n                                    onClick={closeMobileMenu && logout}\r\n                                >\r\n                                    Log out\r\n                                </Link>\r\n                            </li>\r\n                        )} \r\n                    </ul>\r\n                    {button && getButton()}\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","/* Custom cards to be used across the app */\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CardItem (props) {\r\n    return (\r\n        <>\r\n            <li className=\"cards__item\">\r\n                <Link className=\"cards__item__link\" to={props.path}>\r\n                    <figure className=\"cards__item__pic-wrap\">\r\n                        <img className=\"cards__item__img\" alt=\"CardItem\" src={props.src} />\r\n                    </figure>\r\n                    <div className=\"cards__item__info\">\r\n                        <h5 className=\"cards__item__text\">{props.text}</h5>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardItem;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Cards.css\";\r\nimport CardItem from \"./CardItem\";\r\nimport { Button } from \"../components/Button\";\r\n\r\nconst SignUpCards = () => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0); // scroll to top of page \r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            <h1>Sign up</h1>\r\n            <div className=\"cards__container\">\r\n                <div className=\"cards__wrapper\">\r\n                    <ul className=\"cards__items\">\r\n                        <CardItem\r\n                            src=\"images/roadsideassistance.jpg\"\r\n                            text=\"Sign Up as Assistance Professional\"\r\n                            path=\"/signup-ap\"\r\n                        />\r\n                        <CardItem\r\n                            src=\"images/motorist.jpg\"\r\n                            text=\"Sign Up as Motorist: $49.99 p/year\"\r\n                            path=\"/signup-motorist\"\r\n                        />\r\n                    </ul>\r\n                </div>\r\n                <Button\r\n                    linkto=\"/login\"\r\n                    buttonStyle=\"btn--filled\"\r\n                    buttonSize=\"btn--large\"\r\n                >\r\n                    Have an account? Log in\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpCards;\r\n","/* Main part of home page which displays video */ \r\n\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport { Button } from \"./Button\";\r\nimport \"./HeroSection.css\";\r\n\r\nconst HeroSection = () => {\r\n    return (\r\n        <div className=\"hero-container\">\r\n            <video src=\"/videos/herovid.mp4\" autoPlay loop muted />\r\n            <h1>CAR BROKEN?</h1>\r\n            <p>Request An Assistance Professional, Right Now!</p>\r\n            <div className=\"hero-btns\">\r\n                <Button\r\n                    className=\"btns\"\r\n                    buttonStyle=\"btn--outline\"\r\n                    buttonSize=\"btn--large\"\r\n                    linkto=\"/service-request\"\r\n                >\r\n                    REQUEST\r\n                </Button>\r\n                <Button\r\n                    className=\"btns\"\r\n                    buttonStyle=\"btn--primary\"\r\n                    buttonSize=\"btn--large\"\r\n                    linkto=\"/signup\"\r\n                >\r\n                    SIGN UP\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeroSection;\r\n","/* Simple footer */ \r\n\r\nimport React from \"react\";\r\nimport \"./Footer.css\";\r\nimport { Button } from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer-container\">\r\n            <section className=\"footer-subscription\">\r\n                <p className=\"footer-subscription-heading\">\r\n                    Join the Lemon Newsletter to Receive Our Latest Updates\r\n                </p>\r\n                <p className=\"footer-subscription-text\">\r\n                    You can unsubscribe at any time.\r\n                </p>\r\n                <div className=\"input-areas\">\r\n                    <form>\r\n                        <input\r\n                            className=\"footer-input\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Your Email\"\r\n                        />\r\n                        <Button linkto=\"/\" buttonStyle=\"btn--outline\">\r\n                            Subscribe\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </section>\r\n            <div className=\"footer-links\">\r\n                <div className=\"footer-link-wrapper\">\r\n                    <div className=\"footer-link-items\">\r\n                        <h2>About Us</h2>\r\n                        <Link to=\"/how-it-works\">How it works</Link>\r\n                        <Link to=\"/aboutus\">User manual</Link>\r\n                        <Link to=\"/meet-the-team\">Meet the team</Link>\r\n                    </div>\r\n                    <div className=\"footer-link-items\">\r\n                        <h2>Contact Us</h2>\r\n                        <a href=\"/\">\r\n                            <i className=\"fas fa-phone\" /> (+61) 415 670 342\r\n                        </a>\r\n                        <a href=\"mailto:lemon@gmail.com\">\r\n                            <i className=\"fas fa-envelope\"></i> lemon@gmail.com\r\n                        </a>\r\n                        <a href=\"https://faxauthority.com/glossary/fax-machine/\">\r\n                            <i className=\"fas fa-fax\"></i> (+61) 456 789 012\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer-link-wrapper\">\r\n                    <div className=\"footer-link-items\">\r\n                        <h2>Reviews</h2>\r\n                        <a href=\"https://www.rottentomatoes.com/m/morbius\">Customers</a>\r\n                        <a href=\"https://www.rottentomatoes.com/m/morbius\">Members</a>\r\n                        <a href=\"https://www.rottentomatoes.com/m/morbius\">\r\n                            Assistance Pros.\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"footer-link-items\">\r\n                        <h2>Social Media</h2>\r\n                        <a href=\"http://www.facebook.com/\">Facebook</a>\r\n                        <a href=\"http://www.instagram.com/\">Instagram</a>\r\n                        <a href=\"http://www.youtube.com/\">Youtube</a>\r\n                        <a href=\"http://www.twitter.com/\">Twitter</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <section className=\"social-media\">\r\n                <div className=\"social-media-wrap\">\r\n                    <div className=\"footer-logo\">\r\n                        <Link to=\"/\" className=\"social-logo\">\r\n                            <img src={\"images/logo.png\"} alt=\"logo\" />\r\n                        </Link>\r\n                    </div>\r\n                    <small className=\"website-rights\">LEMON © 2022</small>\r\n                    <div className=\"social-icons\">\r\n                        <Link\r\n                            className=\"social-icon-link facebook\"\r\n                            to=\"/\"\r\n                            target=\"_blank\"\r\n                            aria-label=\"Facebook\"\r\n                        >\r\n                            <i className=\"fab fa-facebook-f\" />\r\n                        </Link>\r\n                        <Link\r\n                            className=\"social-icon-link instagram\"\r\n                            to=\"/\"\r\n                            target=\"_blank\"\r\n                            aria-label=\"Instagram\"\r\n                        >\r\n                            <i className=\"fab fa-instagram\" />\r\n                        </Link>\r\n                        <Link\r\n                            className=\"social-icon-link youtube\"\r\n                            to=\"/\"\r\n                            target=\"_blank\"\r\n                            aria-label=\"Youtube\"\r\n                        >\r\n                            <i className=\"fab fa-youtube\" />\r\n                        </Link>\r\n                        <Link\r\n                            className=\"social-icon-link twitter\"\r\n                            to=\"/\"\r\n                            target=\"_blank\"\r\n                            aria-label=\"Twitter\"\r\n                        >\r\n                            <i className=\"fab fa-twitter\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","/* Home page holds the hero section and the sign up cards */  \r\n\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport SignUpCards from \"../components/SignUpCards\";\r\nimport HeroSection from \"../components/HeroSection\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <HeroSection />\r\n            <SignUpCards />\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://lemonassist.herokuapp.com/'\r\n});","/* If a user is a subscribed member and would like to request a service, they can \r\nlogin with the form below and fill out the request service member form.\r\nIf they are not, there is a redirect link to the customer request service form  */ \r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Avatar,\r\n    Button,\r\n    TextField,\r\n    Box,\r\n    Typography,\r\n    Alert,\r\n    Paper,\r\n    Link\r\n} from \"@mui/material\";\r\n\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Footer from \"../components/Footer\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"../api/axios\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst REQ_URL = \"/service-request/member/search\";\r\nconst MIN_LENGTH = 10;\r\n// regex to handle formats \r\nconst phoneReg =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nconst nameReg = /^[a-zA-Z]+$/;\r\n\r\n// schema to handle form validation\r\nconst LoginSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    lastName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    phoneNumber: Yup.string()\r\n        .required(\"Required\")\r\n        .matches(phoneReg, \"Phone number invalid\")\r\n        .min(10, \"Phone number must be 10 digits\")\r\n        .max(10, \"Phone number must be 10 digits\"),\r\n});\r\n\r\nconst RequestService = () => {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const { login } = useContext(AuthContext);\r\n\r\n    var userType = Object.keys(sessionStorage)[0];\r\n    var user = JSON.parse(sessionStorage.getItem(userType));\r\n\r\n    // if the user is not logged in, clear form fields \r\n    if (userType !== 'member') {\r\n        user = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            phoneNumber: \"\"\r\n        };\r\n    }\r\n\r\n    // redirect user if they are an AP \r\n    if (userType === 'ap')\r\n        return (<Redirect to='/'></Redirect>)\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n        axios\r\n            .post(REQ_URL, values)\r\n            .then(({ data: savedMember }) => {\r\n                sessionStorage.setItem(\"member\", JSON.stringify(savedMember));\r\n                login();\r\n                setSuccess(true);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setSuccess(false);\r\n                setErrMsg(err.message);\r\n            });\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 3 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                value={values.firstName}\r\n                                helperText={touched.firstName ? errors.firstName : \"\"}\r\n                                error={touched.firstName && Boolean(errors.firstName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                value={values.lastName}\r\n                                helperText={touched.lastName ? errors.lastName : \"\"}\r\n                                error={touched.lastName && Boolean(errors.lastName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"phoneNumber\"\r\n                                label=\"Phone Number\"\r\n                                value={values.phoneNumber}\r\n                                helperText={touched.phoneNumber ? errors.phoneNumber : \"\"}\r\n                                error={touched.phoneNumber && Boolean(errors.phoneNumber)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: MIN_LENGTH }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 2,\r\n                        }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/service-request-customer\" variant=\"body2\">\r\n                                Not a member? Request Service here\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            {success ? (<Redirect to='/service-request-member'></Redirect>) : (\r\n                <Container component=\"main\" maxWidth=\"sm\">\r\n                    <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 6, md: 6 } }} >\r\n                        <Box\r\n                            sx={{\r\n                                marginTop: 2,\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Find Member\r\n                            </Typography>{\" \"}\r\n                            <br />\r\n                            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                            <br />\r\n                            <Formik\r\n                                initialValues={{\r\n                                    firstName: `${user.firstName}`,\r\n                                    lastName: `${user.lastName}`,\r\n                                    phoneNumber: `${user.phoneNumber}`,\r\n                                }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    submitForm(values);\r\n                                    setSubmitting(false);\r\n                                }}\r\n                                validationSchema={LoginSchema}\r\n                            >\r\n                                {form}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Paper>\r\n                </Container>\r\n            )}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestService; ","/* Confirming service request form card object as a place for the user\r\nto await the acceptance from an assistance professional */ \r\n\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Button,\r\n    Box,\r\n    Typography,\r\n    Paper,\r\n    CircularProgress\r\n} from \"@mui/material\";\r\n\r\nimport Footer from \"../components/Footer\";\r\nimport axios from \"../api/axios\";\r\n\r\nconst REQ_URL = \"/ap-search\";\r\nconst SERV_URL = \"/service/resubmission\"\r\n\r\nconst RequestServiceConfirmation = () => {\r\n\r\n    const [/*errMsg*/, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const service = JSON.parse(sessionStorage.getItem(\"service\"));\r\n\r\n    // ask to see if an AP has accepted the service request every 5 seconds \r\n    function resubmitService(values) {\r\n        const newService = ({\r\n            serviceID: service.serviceID,\r\n        });\r\n        axios\r\n            .post(SERV_URL, newService)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    sessionStorage.setItem(\"service\", JSON.stringify(res.data.docs));\r\n                    setSuccess(false);\r\n                    const newAP = ({\r\n                        assistProfID: service.assistProfID,\r\n                    });\r\n                    axios\r\n                        .post(REQ_URL, newAP)\r\n                        .then(function (res) {\r\n                            if (res.data) {\r\n                                console.log(res.data)\r\n                                sessionStorage.setItem('service-ap', JSON.stringify(res.data));\r\n                                setSuccess(true);\r\n                                window.location.href = \"/service-request-result\"\r\n                            } else {\r\n                                setErrMsg(\"Waiting on assistance professional\");\r\n                                setSuccess(false);\r\n                            }\r\n                        })\r\n                        .catch((err) => {\r\n                            setSuccess(false);\r\n                            setErrMsg(err.message);\r\n                        });\r\n                } else if (res.data.result === \"error\") {\r\n                    setErrMsg(\"Something went wrong\");\r\n                    setSuccess(false);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setSuccess(false);\r\n                setErrMsg(\"Something went horribly wrong\");\r\n            });\r\n        window.setTimeout(() => {\r\n            resubmitService({});\r\n            window.location.reload(false)\r\n        }, 5000);\r\n    };\r\n\r\n    window.onload = function () {\r\n        resubmitService({});\r\n    }\r\n\r\n    const form = ({\r\n        handleSubmit,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 0 }}>\r\n                    <Grid container spacing={0} justifyContent=\"center\">\r\n                        <Typography variant=\"h6\" gutterBottom sx={{ mt: 6, mb: 6 }}>\r\n                            An Assistance Professional is on their way!\r\n                        </Typography>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={2} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Call-Out Fee:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    ${(service) ? service.callOutFee : \"\"}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={2} />\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Total Payment:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    To Be Confirmed\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={!success}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 0,\r\n                        }}\r\n                    >\r\n                        Confirm and Continue\r\n                    </Button>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            {success ? (<Redirect to='/service-request-result'></Redirect>) : (\r\n                <Container component=\"main\" maxWidth=\"sm\">\r\n                    <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 6, md: 6 } }} >\r\n                        <Box\r\n                            sx={{\r\n                                marginTop: 2,\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <CircularProgress color=\"secondary\" />\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Service Request Confirmation\r\n                            </Typography>{\" \"}\r\n\r\n                            <Formik\r\n                                initialValues={{\r\n                                    serviceID: \"\",\r\n                                }}\r\n                                onSubmit={(service, { setSubmitting }) => {\r\n                                    resubmitService(service);\r\n                                    setSubmitting(false);\r\n                                }}\r\n                            >\r\n                                {form}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Paper>\r\n                </Container>\r\n            )}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestServiceConfirmation;\r\n","/* Resulting service request form card object where a user can review the assistance\r\nprofessional and the amount due for the service. */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Avatar,\r\n    Button,\r\n    TextField,\r\n    Box,\r\n    Typography,\r\n    Paper\r\n} from \"@mui/material\";\r\n\r\nimport CheckCircle from \"@mui/icons-material/CheckCircle\";\r\nimport Footer from \"../components/Footer\";\r\nimport axios from \"../api/axios\";\r\n\r\nconst REC_ID_URL = '/generate-receiptID';\r\nconst PAYCTRL_URL = '/new-payment-controller';\r\n\r\nconst RequestServiceResult = () => {\r\n\r\n    const [/*success*/, setSuccess] = useState(false);\r\n    const [/*errMsg*/, setErrMsg] = useState(\"\");\r\n\r\n    const service = JSON.parse(sessionStorage.getItem(\"service\"));\r\n    const ap = JSON.parse(sessionStorage.getItem(\"service-ap\"));\r\n\r\n    // payment calculation based on commission rate, call out fee and service type \r\n    var commission = (service.callOutFee + service.serviceTypePrice) / 10 * 3;\r\n    var apPayment = service.callOutFee + service.serviceTypePrice - commission;\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n        const apRating = ({\r\n            rating: values.assistProfRating,\r\n        });\r\n\r\n        const paymentController = ({\r\n            motoristID: service.motoristID,\r\n            assistProfID: ap.assistProfID,\r\n            paymentType: \"Card\",\r\n            amountDue: service.callOutFee + service.serviceTypePrice,\r\n            paidToAP: apPayment,\r\n            commissionFee: commission,\r\n        });\r\n\r\n        axios\r\n            .post(PAYCTRL_URL, paymentController)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    console.log(\"Payment-controller success\");\r\n                    setSuccess(true);\r\n                    setErrMsg(\"\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setSuccess(false);\r\n                setErrMsg(err);\r\n            });\r\n\r\n        axios\r\n            .post(REC_ID_URL)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    console.log(res.data.newReceiptID);\r\n                    sessionStorage.setItem(\"receiptID\", JSON.stringify(res.data.newReceiptID));\r\n                    setSuccess(true);\r\n                    setErrMsg(\"\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setSuccess(false);\r\n                setErrMsg(err);\r\n            });\r\n\r\n        sessionStorage.setItem(\"apRating\", JSON.stringify(apRating));\r\n        window.location.href = \"/service-receipt\";\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 0 }}>\r\n                    <Grid container spacing={0} justifyContent=\"center\">\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={6}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 6, mb: 1 }}>\r\n                                    Assistance Professional:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography variant=\"body2\" gutterBottom sx={{ mt: 6.2, mb: 1 }}>\r\n                                    {!ap.firstName ? (\"No one assigned\") : ap.firstName} {!ap.lastName ? (\"\") : ap.lastName}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justifyContent=\"space-between\">\r\n                            <Grid item xs={0.7} />\r\n                            <Grid item xs={4.65}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Service Purchased:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5.6}>\r\n                                <Typography variant=\"body2\" gutterBottom sx={{ ml: 0, mt: 1, mb: 1 }}>\r\n                                    {service.serviceType}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justifyContent=\"space-between\">\r\n                            <Grid item xs={1.05} />\r\n                            <Grid item xs={4.35}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Total Amount Due:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={5.85}>\r\n                                <Typography variant=\"body2\" gutterBottom sx={{ ml: 1, mt: 1, mb: 1 }}>\r\n                                    ${service.callOutFee + service.serviceTypePrice}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={9}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 5, mb: 1 }}>\r\n                                    How Was Your Experience?:\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container justifyContent=\"center\">\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"assistProfRating\"\r\n                                    label=\"Assistance Professional Rating (Out of 5)\"\r\n                                    type=\"number\"\r\n                                    value={values.assistProfRating}\r\n                                    helperText={touched.assistProfRating ? errors.assistProfRating : \"\"}\r\n                                    error={touched.assistProfRating && Boolean(errors.assistProfRating)}\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            padding: \"14px 20px\",\r\n                            mt: 3,\r\n                            mb: 0,\r\n                        }}\r\n                    >\r\n                        Pay Total and Print Receipt\r\n                    </Button>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 6, md: 6 } }} >\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 2,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                            <CheckCircle />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Service Request Result\r\n                        </Typography>{\" \"}\r\n                        <Formik\r\n                            initialValues={{\r\n                                assistProfRating: \"\"\r\n                            }}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                submitForm(values);\r\n                                setSubmitting(false);\r\n                            }}\r\n                        >\r\n                            {form}\r\n                        </Formik>\r\n                    </Box>\r\n                </Paper>\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RequestServiceResult;\r\n","/* Service request receipt card object which simply displays the receipt to the user\r\nand sends that receipt to the member's dashboard (if it is a member service request) */\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Avatar,\r\n    Button,\r\n    Box,\r\n    Typography,\r\n    Paper,\r\n} from \"@mui/material\";\r\n\r\nimport CheckCircle from \"@mui/icons-material/CheckCircle\";\r\nimport Footer from \"../components/Footer\";\r\nimport axios from \"../api/axios\";\r\n\r\nconst RECEIPT_URL = '/motorist-receipt'\r\n\r\nconst ServiceReceipt = () => {\r\n\r\n    const dateNow = new Date().toLocaleString();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [/*errMsg*/, setErrMsg] = useState(\"\");\r\n\r\n    const service = JSON.parse(sessionStorage.getItem(\"service\"));\r\n    const ap = JSON.parse(sessionStorage.getItem(\"service-ap\"));\r\n    const apRating = JSON.parse(sessionStorage.getItem(\"apRating\"));\r\n    const newReceiptID = JSON.parse(sessionStorage.getItem(\"receiptID\"));\r\n\r\n    var userType = Object.keys(sessionStorage)[0];\r\n\r\n    var totalAmountDue = service.callOutFee + service.serviceTypePrice;\r\n\r\n    // send data to backend and handle response \r\n    const submitReceipt = (values) => {\r\n        const motoristReceipt = ({\r\n            receiptID: newReceiptID,\r\n            motoristID: service.motoristID,\r\n            assistProfID: ap.assistProfID,\r\n            assistProfRating: apRating.rating,\r\n            amountPaid: totalAmountDue,\r\n            paymentDate: dateNow,\r\n            servicePurchased: service.serviceType\r\n        });\r\n\r\n        axios\r\n            .post(RECEIPT_URL, motoristReceipt)\r\n            .then((res) => {\r\n                // add receipt to member object \r\n                if (res.data.result === \"success\") {\r\n                    sessionStorage.setItem(\"member\", JSON.stringify(res.data.doc));\r\n                    setSuccess(true);\r\n                    setErrMsg(\"\");\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setSuccess(false);\r\n                setErrMsg(err);\r\n            });\r\n    };\r\n\r\n    const form = ({\r\n        handleSubmit,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 0 }}>\r\n                    <Grid container spacing={0} justifyContent=\"center\">\r\n                        <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 6 }}>\r\n                            Here are the details of your transaction:\r\n                        </Typography>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Receipt ID:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    {newReceiptID}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Motorist ID:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    {service.motoristID}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Assistance Professional ID:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    {ap.assistProfID}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Assistance Professional Rating:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    {apRating.rating}/5\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Total Amount Paid:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    ${totalAmountDue}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Payment Date:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    {dateNow}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={2} justifyContent=\"space-between\">\r\n                            <Grid item xs={3} />\r\n                            <Grid item xs={5}>\r\n                                <Typography variant=\"h6\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    Service Purchased:\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\" gutterBottom sx={{ mt: 1, mb: 1 }}>\r\n                                    {service.serviceType}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Typography variant=\"h5\" gutterBottom sx={{ mt: 6, mb: 0 }}>\r\n                            Thank You!\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 0,\r\n                        }}\r\n                    >\r\n                        Return Home\r\n                    </Button>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            {success ? (<Redirect to='/'></Redirect>) : (\r\n                <Container component=\"main\" maxWidth=\"md\">\r\n                    <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 6, md: 6 } }} >\r\n                        <Box\r\n                            sx={{\r\n                                marginTop: 2,\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                                <CheckCircle />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Service Receipt\r\n                            </Typography>{\" \"}\r\n                            <Formik\r\n                                initialValues={{\r\n                                    receiptID: newReceiptID,\r\n                                    motoristID: service.motoristID,\r\n                                    assistProfID: ap.assistProfID,\r\n                                    assistProfRating: apRating.rating,\r\n                                    amountPaid: totalAmountDue,\r\n                                    paymentDate: dateNow,\r\n                                    servicePurchased: service.serviceType\r\n                                }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    submitReceipt(values);\r\n                                    setSubmitting(false);\r\n                                }}\r\n                            >\r\n                                {form}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Paper>\r\n                </Container>\r\n            )}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServiceReceipt;","import React, { useEffect } from \"react\";\r\nimport \"./Cards.css\";\r\nimport CardItem from \"./CardItem\";\r\nimport { Button } from \"../components/Button\";\r\n\r\nconst LoginCards = () => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            <h1>Log in</h1>\r\n            <div className=\"cards__container\">\r\n                <div className=\"cards__wrapper\">\r\n                    <ul className=\"cards__items\">\r\n                        <CardItem\r\n                            src=\"images/roadsideassistance.jpg\"\r\n                            text=\"Login as Assistance Professional\"\r\n                            path=\"/login-ap\"\r\n                        />\r\n                        <CardItem\r\n                            src=\"images/motorist.jpg\"\r\n                            text=\"Login as Motorist\"\r\n                            path=\"/login-motorist\"\r\n                        />\r\n                    </ul>\r\n                </div>\r\n                <Button\r\n                    linkto=\"/signup\"\r\n                    buttonStyle=\"btn--filled\"\r\n                    buttonSize=\"btn--large\"\r\n                >\r\n                    Don't have an account? Sign Up\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginCards;\r\n","/* Cards to send user to the apprproate page */\r\n\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport LoginCards from \"../components/LoginCards\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <>\r\n      <LoginCards />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/* This handles the status of the user's logged in status */    \r\n\r\nimport React, { createContext, useState } from \"react\";\r\n\r\nconst StatusContext = createContext({\r\n    status: false,\r\n    handlestatus: () => {},\r\n});\r\n\r\nconst StatusContextProvider = ({ children }) => {\r\n    const [status, setstatus] = useState(false);\r\n    const handlestatus = (value) => {\r\n        setstatus(value);\r\n    };\r\n    return (\r\n        <StatusContext.Provider value={{ status, handlestatus }}>\r\n            {children}\r\n        </StatusContext.Provider>\r\n    );\r\n};\r\n\r\nexport { StatusContext, StatusContextProvider };","/* To login as a subscribed member, we must first obtain valid information from a form\r\nso that the data sent to the database is properly formatted. Then sending\r\nthe data through a 'link' to the backend, which triggers a function to check if\r\nthat subscribed member exists in the mongodb collection */ \r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport { StatusContext } from \"../context/StatusContext\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport axios from \"../api/axios\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    FormControlLabel,\r\n    Avatar,\r\n    Button,\r\n    TextField,\r\n    Checkbox,\r\n    Link,\r\n    Box,\r\n    Typography,\r\n    Paper,\r\n    Alert,\r\n} from \"@mui/material\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Footer from \"../components/Footer\";\r\nimport * as Yup from \"yup\";\r\n\r\n// schema to handle form validation\r\nconst LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n        .required(\"Required\")\r\n        .min(4, \"​Password must be at least 4 characters\"),\r\n});\r\n\r\nconst LOGIN_URL = \"/login/member\";\r\n\r\nexport default function LoginMotorist() {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const { handlestatus } = useContext(StatusContext);\r\n    const { login } = useContext(AuthContext);\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n        axios\r\n            .post(LOGIN_URL, values)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    sessionStorage.setItem(\"member\", JSON.stringify(res.data.doc));\r\n                    handlestatus(true);\r\n                    login();\r\n                    setSuccess(true);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setSuccess(false);\r\n                setErrMsg(error.message);\r\n            });\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                    <TextField\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        helperText={touched.email ? errors.email : \"\"}\r\n                        error={touched.email && Boolean(errors.email)}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        helperText={touched.password ? errors.password : \"\"}\r\n                        error={touched.password && Boolean(errors.password)}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 2,\r\n                        }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <Redirect to=\"/member-dashboard\" />\r\n            ) : (\r\n                <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n                    <CssBaseline />\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={8}\r\n                        md={5}\r\n                        component={Paper}\r\n                        elevation={6}\r\n                        square\r\n                    >\r\n                        <Box\r\n                            sx={{\r\n                                my: 8,\r\n                                mx: 4,\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Log in\r\n                            </Typography>{\" \"}\r\n                            <br />\r\n                            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                            <Formik\r\n                                initialValues={{ email: \"\", password: \"\" }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    submitForm(values);\r\n                                    setSubmitting(false);\r\n                                }}\r\n                                validationSchema={LoginSchema}\r\n                            >\r\n                                {form}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        xs={false}\r\n                        sm={4}\r\n                        md={7}\r\n                        sx={{\r\n                            backgroundImage: \"url(/images/brokendown.jpg)\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundSize: \"cover\",\r\n                            backgroundPosition: \"center\",\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            )}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n","/* To login as an assistance pro, we must first obtain valid information from a form\r\nso that the data sent to the database is properly formatted. Then sending\r\nthe data through a 'link' to the backend, which triggers a function to check if\r\nthat assistance pro exists in the mongodb collection */ \r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport { StatusContext } from \"../context/StatusContext\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport axios from \"../api/axios\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    FormControlLabel,\r\n    Avatar,\r\n    Button,\r\n    TextField,\r\n    Checkbox,\r\n    Link,\r\n    Box,\r\n    Typography,\r\n    Paper,\r\n    Alert,\r\n} from \"@mui/material\";\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Footer from \"../components/Footer\";\r\nimport * as Yup from \"yup\";\r\n\r\n// schema to handle form validation\r\nconst LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string()\r\n        .required(\"Required\")\r\n        .min(4, \"​Password must be at least 4 characters\"),\r\n});\r\n\r\nconst LOGIN_URL = \"/login/assistance-professional\";\r\n\r\nexport default function LoginAP() {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n    const { handlestatus } = useContext(StatusContext);\r\n    const { login } = useContext(AuthContext);\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n        axios\r\n            .post(LOGIN_URL, values)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    sessionStorage.setItem(\"ap\", JSON.stringify(res.data.doc));\r\n                    handlestatus(true);\r\n                    login();\r\n                    setSuccess(true);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setSuccess(false);\r\n                setErrMsg(error.message);\r\n            });\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\r\n                    <TextField\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        helperText={touched.email ? errors.email : \"\"}\r\n                        error={touched.email && Boolean(errors.email)}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        helperText={touched.password ? errors.password : \"\"}\r\n                        error={touched.password && Boolean(errors.password)}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleChange}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 2,\r\n                        }}\r\n                    >\r\n                        Log in\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <Redirect to=\"/ap-dashboard\" />\r\n            ) : (\r\n                <Grid container component=\"main\" sx={{ height: \"100vh\" }}>\r\n                    <CssBaseline />\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={8}\r\n                        md={5}\r\n                        component={Paper}\r\n                        elevation={6}\r\n                        square\r\n                    >\r\n                        <Box\r\n                            sx={{\r\n                                my: 8,\r\n                                mx: 4,\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Log in\r\n                            </Typography>{\" \"}\r\n                            <br />\r\n                            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                            <Formik\r\n                                initialValues={{ email: \"\", password: \"\" }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    submitForm(values);\r\n                                    setSubmitting(false);\r\n                                }}\r\n                                validationSchema={LoginSchema}\r\n                            >\r\n                                {form}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        xs={false}\r\n                        sm={4}\r\n                        md={7}\r\n                        sx={{\r\n                            backgroundImage: \"url(/images/brokendown.jpg)\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundSize: \"cover\",\r\n                            backgroundPosition: \"center\",\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            )}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n","/* Cards to send user to the apprproate page */\r\n\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport SignUpCards from \"../components/SignUpCards\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst SignUp = () => {\r\n    return (\r\n        <>\r\n            <SignUpCards />\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","/* Default payment form used across app */\r\n\r\nimport * as React from 'react';\r\nimport { Typography, Grid, TextField } from '@mui/material';\r\n\r\nconst PaymentForm = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3 }}>\r\n                Payment method\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cardName\"\r\n                        label=\"Name on card\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cardNumber\"\r\n                        label=\"Card number\"\r\n                        type=\"number\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"dob\"\r\n                        label=\"Expiry Date\"\r\n                        type=\"month\"\r\n                        fullWidth\r\n                        inputProps={{\r\n                            min: \"2022-06\",\r\n                            max: \"2999-01\",\r\n                        }}\r\n                        InputLabelProps={{ shrink: true }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <TextField\r\n                        required\r\n                        id=\"cvv\"\r\n                        label=\"CVV\"\r\n                        type=\"number\"\r\n                        helperText=\"Last three digits on signature strip\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default PaymentForm; ","/* To sign up as a motorist, we must first obtain valid information from a form\r\nso that the data sent to the database is properly formatted. Then sending\r\nthe data through a 'link' to the backend, which triggers a function to then add\r\nthe motorist to the mongodb collection */ \r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Avatar,\r\n    Button,\r\n    TextField,\r\n    Link,\r\n    Box,\r\n    Typography,\r\n    Radio,\r\n    Alert,\r\n    Paper,\r\n} from \"@mui/material\";\r\n\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Footer from \"../components/Footer\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"../api/axios\";\r\nimport { parse, isDate } from \"date-fns\";\r\nimport PaymentForm from '../components/PaymentForm';\r\n\r\n// check if DOB is real date \r\nfunction parseDateString(value, originalValue) {\r\n    const parsedDate = isDate(originalValue)\r\n        ? originalValue\r\n        : parse(originalValue, \"yyyy-MM-dd\", new Date());\r\n\r\n    return parsedDate;\r\n}\r\n\r\nconst SIGNUP_URL = \"/signup/member\";\r\nconst MIN_LENGTH = 10;\r\n// regex to handle formats \r\nconst phoneReg =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nconst nameReg = /^[a-zA-Z]+$/;\r\n\r\n// schema to handle form validation\r\nconst SignUpSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    lastName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    dob: Yup.date()\r\n        .transform(parseDateString)\r\n        .max(new Date())\r\n        .required(\"Required\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    phoneNumber: Yup.string()\r\n        .required(\"Required\")\r\n        .matches(phoneReg, \"Phone number invalid\")\r\n        .min(10, \"Phone number must be 10 digits\")\r\n        .max(10, \"Phone number must be 10 digits\"),\r\n    password: Yup.string()\r\n        .required(\"Required\")\r\n        .min(4, \"​Password must be at least 4 characters\"),\r\n});\r\n\r\nexport default function SignUpMotorist() {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n        axios\r\n            .post(SIGNUP_URL, values)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    setSuccess(true);\r\n                    setErrMsg(\"\");\r\n                    window.scrollTo(0, 0);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setSuccess(false);\r\n                setErrMsg(error.message);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    // custom radio button to be able to handle validation \r\n    const RadioButton = ({\r\n        field: { name, value, onChange },\r\n        id,\r\n        label,\r\n        className,\r\n        ...props\r\n    }) => {\r\n        return (\r\n            <div style={{ display: \"inline-block\" }}>\r\n                <Radio\r\n                    value={id}\r\n                    name={name}\r\n                    label={label}\r\n                    checked={id === value}\r\n                    onChange={onChange}\r\n                    {...props}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const RadioButtonGroup = ({ label, children }) => {\r\n        return (\r\n            <div>\r\n                <legend>{label}</legend>\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 3 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                value={values.firstName}\r\n                                helperText={touched.firstName ? errors.firstName : \"\"}\r\n                                error={touched.firstName && Boolean(errors.firstName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                value={values.lastName}\r\n                                helperText={touched.lastName ? errors.lastName : \"\"}\r\n                                error={touched.lastName && Boolean(errors.lastName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <RadioButtonGroup\r\n                                id=\"gender\"\r\n                                label=\"Gender\"\r\n                                value={values.gender}\r\n                            >\r\n                                <Field\r\n                                    component={RadioButton}\r\n                                    name=\"gender\"\r\n                                    id=\"male\"\r\n                                    label=\"Male\"\r\n                                />\r\n                                <Field\r\n                                    component={RadioButton}\r\n                                    name=\"gender\"\r\n                                    id=\"female\"\r\n                                    label=\"Female\"\r\n                                />\r\n                            </RadioButtonGroup>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"dob\"\r\n                                label=\"Date of Birth\"\r\n                                type=\"date\"\r\n                                value={values.dob}\r\n                                helperText={touched.dob ? errors.dob : \"\"}\r\n                                error={touched.dob && Boolean(errors.dob)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                                inputProps={{\r\n                                    min: \"1899-01-01\",\r\n                                    max: new Date().toISOString().split(\"T\")[0], // DOB cannot be greater than today\r\n                                }}\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                helperText={touched.email ? errors.email : \"\"}\r\n                                error={touched.email && Boolean(errors.email)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"phoneNumber\"\r\n                                label=\"Phone Number\"\r\n                                value={values.phoneNumber}\r\n                                helperText={touched.phoneNumber ? errors.phoneNumber : \"\"}\r\n                                error={touched.phoneNumber && Boolean(errors.phoneNumber)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: MIN_LENGTH }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                value={values.password}\r\n                                helperText={touched.password ? errors.password : \"\"}\r\n                                error={touched.password && Boolean(errors.password)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <PaymentForm />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 2,\r\n                        }}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login-motorist\" variant=\"body2\">\r\n                                Already have an account? Log in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container component=\"main\" maxWidth=\"sm\" >\r\n                <Paper variant=\"outlined\" sx={{ my: { xs: 6, md: 6 }, p: { xs: 2, md: 3 } }} >\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 2,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h4\">\r\n                            Sign up\r\n                        </Typography>{\" \"}\r\n                        <br />\r\n                        {success ? (<Container sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            <Alert severity=\"success\">{\"Signed Up successfully!\"}</Alert>\r\n                            <Button variant=\"contained\" href=\"/login-motorist\">Go to login</Button>\r\n                        </Container>) : \"\"}\r\n                        {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                        <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3, alignSelf: 'flex-start' }}>\r\n                            Personal Details\r\n                        </Typography>\r\n                        <Formik\r\n                            initialValues={{\r\n                                firstName: \"\",\r\n                                lastName: \"\",\r\n                                gender: \"female\",\r\n                                dob: \"\",\r\n                                email: \"\",\r\n                                password: \"\",\r\n                                phoneNumber: \"\",\r\n                            }}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                submitForm(values);\r\n                                setSubmitting(false);\r\n                            }}\r\n                            validationSchema={SignUpSchema}\r\n                        >\r\n                            {form}\r\n                        </Formik>\r\n                    </Box>\r\n                </Paper>\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n","/* To sign up as an assistance professional, we follow the same method used in sign up \r\nfor a motorist, just without the payment form since it is free to become an assistance\r\nprofessional */ \r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Avatar,\r\n    Button,\r\n    TextField,\r\n    Link,\r\n    Box,\r\n    Typography,\r\n    Radio,\r\n    Alert,\r\n    Paper\r\n} from \"@mui/material\";\r\n\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport Footer from \"../components/Footer\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"../api/axios\";\r\nimport { parse, isDate } from \"date-fns\";\r\n\r\n// check if DOB is real date \r\nfunction parseDateString(value, originalValue) {\r\n    const parsedDate = isDate(originalValue)\r\n        ? originalValue\r\n        : parse(originalValue, \"yyyy-MM-dd\", new Date());\r\n\r\n    return parsedDate;\r\n}\r\n\r\nconst SIGNUP_URL = \"/signup/assistance-professional\";\r\nconst MIN_LENGTH = 10;\r\nconst phoneReg =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nconst nameReg = /^[a-zA-Z]+$/;\r\n\r\n// schema to handle form validation\r\nconst SignUpSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    lastName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    dob: Yup.date()\r\n        .transform(parseDateString)\r\n        .max(new Date())\r\n        .required(\"Required\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    phoneNumber: Yup.string()\r\n        .required(\"Required\")\r\n        .matches(phoneReg, \"Phone number invalid\")\r\n        .min(10, \"Phone number must be 10 digits\")\r\n        .max(10, \"Phone number must be 10 digits\"),\r\n    password: Yup.string()\r\n        .required(\"Required\")\r\n        .min(4, \"​Password must be at least 4 characters\"),\r\n});\r\n\r\nconst SignUpAP = () => {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n        axios\r\n            .post(SIGNUP_URL, values)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    setSuccess(true);\r\n                    setErrMsg(\"\");\r\n                    window.scrollTo(0, 0);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setSuccess(false);\r\n                setErrMsg(error.message);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    // custom radio button to be able to handle validation \r\n    const RadioButton = ({\r\n        field: { name, value, onChange },\r\n        id,\r\n        label,\r\n        className,\r\n        ...props\r\n    }) => {\r\n        return (\r\n            <div style={{ display: \"inline-block\" }}>\r\n                <Radio\r\n                    value={id}\r\n                    name={name}\r\n                    label={label}\r\n                    checked={id === value}\r\n                    onChange={onChange}\r\n                    {...props}\r\n                />\r\n                <label htmlFor={id}>{label}</label>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const RadioButtonGroup = ({ label, children }) => {\r\n        return (\r\n            <div>\r\n                <legend>{label}</legend>\r\n                {children}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 3 }}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                value={values.firstName}\r\n                                helperText={touched.firstName ? errors.firstName : \"\"}\r\n                                error={touched.firstName && Boolean(errors.firstName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                value={values.lastName}\r\n                                helperText={touched.lastName ? errors.lastName : \"\"}\r\n                                error={touched.lastName && Boolean(errors.lastName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <RadioButtonGroup\r\n                                id=\"gender\"\r\n                                label=\"Gender\"\r\n                                value={values.gender}\r\n                            >\r\n                                <Field\r\n                                    component={RadioButton}\r\n                                    name=\"gender\"\r\n                                    id=\"male\"\r\n                                    label=\"Male\"\r\n                                />\r\n                                <Field\r\n                                    component={RadioButton}\r\n                                    name=\"gender\"\r\n                                    id=\"female\"\r\n                                    label=\"Female\"\r\n                                />\r\n                            </RadioButtonGroup>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"dob\"\r\n                                label=\"Date of Birth\"\r\n                                type=\"date\"\r\n                                value={values.dob}\r\n                                helperText={touched.dob ? errors.dob : \"\"}\r\n                                error={touched.dob && Boolean(errors.dob)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                                inputProps={{\r\n                                    min: \"1899-01-01\",\r\n                                    max: new Date().toISOString().split(\"T\")[0], // DOB cannot be greater than today\r\n                                }}\r\n                                InputLabelProps={{ shrink: true }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                helperText={touched.email ? errors.email : \"\"}\r\n                                error={touched.email && Boolean(errors.email)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"phoneNumber\"\r\n                                label=\"Phone Number\"\r\n                                value={values.phoneNumber}\r\n                                helperText={touched.phoneNumber ? errors.phoneNumber : \"\"}\r\n                                error={touched.phoneNumber && Boolean(errors.phoneNumber)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: MIN_LENGTH }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                value={values.password}\r\n                                helperText={touched.password ? errors.password : \"\"}\r\n                                error={touched.password && Boolean(errors.password)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 2,\r\n                        }}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justifyContent=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login-ap\" variant=\"body2\">\r\n                                Already have an account? Log in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container component=\"main\" maxWidth=\"sm\">\r\n                <Paper variant=\"outlined\" sx={{ my: { xs: 6, md: 6 }, p: { xs: 2, md: 3 } }} >\r\n                    <Box\r\n                        sx={{\r\n                            marginTop: 2,\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h4\">\r\n                            Sign up\r\n                        </Typography>{\" \"}\r\n                        <br />\r\n                        {success ? (<Container sx={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: 'center',\r\n                        }}>\r\n                            <Alert severity=\"success\">{\"Signed Up successfully!\"}</Alert>\r\n                            <Button variant=\"contained\" href=\"/login-motorist\">Go to login</Button>\r\n                        </Container>) : \"\"}\r\n                        {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                        <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3, alignSelf: 'flex-start' }}>\r\n                            Personal Details\r\n                        </Typography>\r\n                        <Formik\r\n                            initialValues={{\r\n                                firstName: \"\",\r\n                                lastName: \"\",\r\n                                gender: \"female\",\r\n                                dob: \"\",\r\n                                email: \"\",\r\n                                password: \"\",\r\n                                phoneNumber: \"\",\r\n                            }}\r\n                            onSubmit={(values, { setSubmitting }) => {\r\n                                submitForm(values);\r\n                                setSubmitting(false);\r\n                            }}\r\n                            validationSchema={SignUpSchema}\r\n                        >\r\n                            {form}\r\n                        </Formik>\r\n                    </Box>\r\n                </Paper>\r\n            </Container>\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SignUpAP; \r\n","/* Once the user is validated as a subscribed member, this form is filled out for a\r\nservice request. There is no call out fee but they must pay for the service provided\r\nby the assistance pro. This is then sent to the backend where it will be added as a \r\njob to a list of available jobs for each assistance pro (if in distance range). */ \r\n\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Button,\r\n    TextField,\r\n    Box,\r\n    Typography,\r\n    Alert,\r\n    Paper,\r\n    MenuItem\r\n} from \"@mui/material\";\r\n\r\nimport Footer from \"../components/Footer\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"../api/axios\";\r\nimport PaymentForm from '../components/PaymentForm';\r\n\r\nconst SERVICE_URL = \"/service-request/member\";\r\n// regex to handle correct formats \r\nconst streetReg = /^[a-zA-Z ]+$/;\r\nconst plateReg = /^[A-Z0-9]+$/;\r\n\r\n// schema to handle form validation\r\nconst RequestFormSchema = Yup.object().shape({\r\n    // ADDRESS SCHEMA RULES \r\n    streetName: Yup.string().required(\"Required\").matches(streetReg, \"Only letters\"),\r\n    streetNum: Yup.number(\"Invalid street number\"),\r\n    suburb: Yup.string().required(\"Required\").matches(streetReg, \"Only letters\"),\r\n    crossRoad1: Yup.string()\r\n        .required(\"Required\"),\r\n    crossRoad2: Yup.string()\r\n        .required(\"Required\"),\r\n\r\n    // CAR SCHEMA RULES \r\n    plateNumber: Yup.string()\r\n        .required(\"Required\")\r\n        .matches(plateReg, \"Invalid plate number\")\r\n        .max(6, \"Plate number less than 6 digits\"),\r\n    manufacturer: Yup.string()\r\n        .required(\"Required\"),\r\n    model: Yup.string()\r\n        .required(\"Required\"),\r\n    year: Yup.number(\"Invalid year\")\r\n        .required(\"Required\")\r\n        .min(4, \"Year must be 4 digits\"),\r\n    body_type: Yup.string()\r\n        .required(\"Required\"),\r\n    colour: Yup.string()\r\n        .required(\"Required\"),\r\n});\r\n\r\nconst ServiceRequestMember = () => {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    var userType = Object.keys(sessionStorage)[0];\r\n    var user = JSON.parse(sessionStorage.getItem(userType));\r\n\r\n    // return user if they are not a member \r\n    if (!userType || userType === 'ap')\r\n        return (<Redirect to='/'></Redirect>);\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n\r\n        const service = ({\r\n            firstName: `${user.firstName}`,\r\n            lastName: `${user.lastName}`,\r\n            phoneNumber: `${user.phoneNumber}`,\r\n            streetName: values.streetName,\r\n            streetNum: values.streetNum,\r\n            suburb: values.suburb,\r\n            nearestCrossroadArr: [values.crossRoad1, values.crossRoad2],\r\n            plateNumber: values.plateNumber,\r\n            manufacturer: values.manufacturer,\r\n            model: values.model,\r\n            year: values.year,\r\n            body_type: values.body_type,\r\n            colour: values.colour,\r\n            serviceType: values.serviceType,\r\n        });\r\n\r\n        axios\r\n            .post(SERVICE_URL, service)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    sessionStorage.setItem(\"service\", JSON.stringify(res.data.newService));\r\n                    setSuccess(true);\r\n                    setErrMsg(\"\");\r\n                    window.scrollTo(0, 0);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setSuccess(false);\r\n                setErrMsg(error.message);\r\n            });\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3, alignSelf: 'flex-start' }}>\r\n                        Address\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"suburb\"\r\n                                label=\"Suburb\"\r\n                                value={values.suburb}\r\n                                helperText={touched.suburb ? errors.suburb : \"\"}\r\n                                error={touched.suburb && Boolean(errors.suburb)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"crossRoad1\"\r\n                                label=\"Cross Road 1\"\r\n                                value={values.crossRoad1}\r\n                                helperText={touched.crossRoad1 ? errors.crossRoad1 : \"\"}\r\n                                error={touched.crossRoad1 && Boolean(errors.crossRoad1)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"crossRoad2\"\r\n                                label=\"Cross Road 2\"\r\n                                value={values.crossRoad2}\r\n                                helperText={touched.crossRoad2 ? errors.crossRoad2 : \"\"}\r\n                                error={touched.crossRoad2 && Boolean(errors.crossRoad2)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"streetNum\"\r\n                                label=\"Street Number\"\r\n                                type=\"number\"\r\n                                value={values.streetNum}\r\n                                helperText={touched.streetNum ? errors.streetNum : \"\"}\r\n                                error={touched.streetNum && Boolean(errors.streetNum)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"streetName\"\r\n                                label=\"Street Name\"\r\n                                value={values.firstName}\r\n                                helperText={touched.firstName ? errors.firstName : \"\"}\r\n                                error={touched.firstName && Boolean(errors.firstName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3, alignSelf: 'flex-start' }}>\r\n                        Car\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"plateNumber\"\r\n                                label=\"Plate Number\"\r\n                                value={values.plateNumber}\r\n                                helperText={touched.plateNumber ? errors.plateNumber : \"\"}\r\n                                error={touched.plateNumber && Boolean(errors.plateNumber)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: 6 }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"manufacturer\"\r\n                                label=\"Manufacturer\"\r\n                                value={values.manufacturer}\r\n                                helperText={touched.manufacturer ? errors.manufacturer : \"\"}\r\n                                error={touched.manufacturer && Boolean(errors.manufacturer)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"model\"\r\n                                label=\"Model\"\r\n                                value={values.model}\r\n                                helperText={touched.model ? errors.model : \"\"}\r\n                                error={touched.model && Boolean(errors.model)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"year\"\r\n                                label=\"Year\"\r\n                                value={values.year}\r\n                                helperText={touched.year ? errors.year : \"\"}\r\n                                error={touched.year && Boolean(errors.year)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: 4 }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"body_type\"\r\n                                label=\"Body Type\"\r\n                                select\r\n                                value={values.body_type}\r\n                                helperText={touched.body_type ? errors.body_type : \"\"}\r\n                                error={touched.body_type && Boolean(errors.body_type)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange(\"body_type\")}\r\n                            >\r\n                                <MenuItem value={\"UTE\"}>UTE</MenuItem>\r\n                                <MenuItem value={\"HATCH\"}>HATCH</MenuItem>\r\n                                <MenuItem value={\"SUV\"}>SUV</MenuItem>\r\n                                <MenuItem value={\"SEDAN\"}>SEDAN</MenuItem>\r\n                                <MenuItem value={\"COUPE\"}>COUPE</MenuItem>\r\n                                <MenuItem value={\"WAGON\"}>WAGON</MenuItem>\r\n                                <MenuItem value={\"VAN\"}>VAN</MenuItem>\r\n                                <MenuItem value={\"CONVERTIBLE\"}>CONVERTIBLE</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"colour\"\r\n                                label=\"Colour\"\r\n                                value={values.colour}\r\n                                helperText={touched.colour ? errors.colour : \"\"}\r\n                                error={touched.colour && Boolean(errors.colour)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"serviceType\"\r\n                                label=\"Service Type\"\r\n                                select\r\n                                value={values.serviceType}\r\n                                helperText={touched.serviceType ? errors.serviceType : \"\"}\r\n                                error={touched.serviceType && Boolean(errors.serviceType)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange(\"serviceType\")}\r\n                            >\r\n                                <MenuItem value={\"Unknown\"}>Unknown</MenuItem>\r\n                                <MenuItem value={\"Flat Battery\"}>Flat Battery</MenuItem>\r\n                                <MenuItem value={\"Engine Overheating\"}>Engine Overheating</MenuItem>\r\n                                <MenuItem value={\"Car Won't Start\"}>Car Won't Start</MenuItem>\r\n                                <MenuItem value={\"Can't Get In Car\"}>Can't Get In Car</MenuItem>\r\n                                <MenuItem value={\"Flat Tyre\"}>Flat Tyre</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <PaymentForm />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 2,\r\n                        }}\r\n                    >\r\n                        Request Service\r\n                    </Button>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            {success ? (<Redirect to='/service-request-confirm'></Redirect>) : (\r\n                <Container component=\"main\" maxWidth=\"sm\">\r\n                    <Paper variant=\"outlined\" sx={{ my: { xs: 6, md: 6 }, p: { xs: 2, md: 3 } }} >\r\n                        <Box\r\n                            sx={{\r\n                                marginTop: 2,\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <Typography component=\"h1\" variant=\"h4\">\r\n                                Request Service\r\n                            </Typography>{\" \"}\r\n                            <br />\r\n                            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                            <Formik\r\n                                initialValues={{\r\n                                    streetName: \"\",\r\n                                    streetNum: 1,\r\n                                    suburb: \"\",\r\n                                    crossRoad1: \"\",\r\n                                    crossRoad2: \"\",\r\n                                    plateNumber: \"\",\r\n                                    manufacturer: \"\",\r\n                                    model: \"\",\r\n                                    year: 2022,\r\n                                    body_type: \"SUV\",\r\n                                    colour: \"\",\r\n                                    serviceType: \"Unknown\"\r\n                                }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    submitForm(values);\r\n                                    setSubmitting(false);\r\n                                }}\r\n                                validationSchema={RequestFormSchema}\r\n                            >\r\n                                {form}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Paper>\r\n                </Container>\r\n            )}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServiceRequestMember; \r\n","/* This is a form filled out by those who are pay on demand customers. There is a \r\ncall out fee and they must pay for the service provided by the assistance pro. \r\nThis is then sent to the backend where it will be added as a \r\njob to a list of available jobs for each assistance pro (if in distance range). */ \r\n\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport {\r\n    Grid,\r\n    CssBaseline,\r\n    Container,\r\n    Button,\r\n    TextField,\r\n    Box,\r\n    Typography,\r\n    Alert,\r\n    Paper,\r\n    MenuItem\r\n} from \"@mui/material\";\r\n\r\nimport Footer from \"../components/Footer\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"../api/axios\";\r\nimport PaymentForm from '../components/PaymentForm';\r\n\r\nconst SERVICE_URL = \"/service-request/customer\";\r\nconst MIN_LENGTH = 10;\r\n// regex to handle correct formats \r\nconst phoneReg = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nconst nameReg = /^[a-zA-Z ]+$/;\r\nconst plateReg = /^[A-Z0-9]+$/;\r\n\r\n// schema to handle form validation\r\nconst RequestFormSchema = Yup.object().shape({\r\n    // PERSONAL SCHEMA RULES \r\n    firstName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    lastName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    phoneNumber: Yup.string()\r\n        .required(\"Required\")\r\n        .matches(phoneReg, \"Phone number invalid\")\r\n        .min(10, \"Phone number must be 10 digits\")\r\n        .max(10, \"Phone number must be 10 digits\"),\r\n\r\n    // ADDRESS SCHEMA RULES \r\n    streetName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    streetNum: Yup.number(\"Invalid street number\"),\r\n    suburb: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    crossRoad1: Yup.string()\r\n        .required(\"Required\"),\r\n    crossRoad2: Yup.string()\r\n        .required(\"Required\"),\r\n\r\n    // CAR SCHEMA RULES \r\n    plateNumber: Yup.string()\r\n        .required(\"Required\")\r\n        .matches(plateReg, \"Invalid plate number\")\r\n        .max(6, \"Plate number less than 6 digits\"),\r\n    manufacturer: Yup.string()\r\n        .required(\"Required\"),\r\n    model: Yup.string()\r\n        .required(\"Required\"),\r\n    year: Yup.number(\"Invalid year\")\r\n        .required(\"Required\")\r\n        .min(4, \"Year must be 4 digits\"),\r\n    body_type: Yup.string()\r\n        .required(\"Required\"),\r\n    colour: Yup.string()\r\n        .required(\"Required\"),\r\n});\r\n\r\nconst ServiceRequestCustomer = () => {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    var userType = Object.keys(sessionStorage)[0];\r\n\r\n    // return user if they are a member or ap\r\n    if (userType === 'member' || userType === 'ap')\r\n        return (<Redirect to='/'></Redirect>);\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n\r\n        const service = ({\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            phoneNumber: values.phoneNumber,\r\n            streetName: values.streetName,\r\n            streetNum: values.streetNum,\r\n            suburb: values.suburb,\r\n            nearestCrossroadArr: [values.crossRoad1, values.crossRoad2],\r\n            plateNumber: values.plateNumber,\r\n            manufacturer: values.manufacturer,\r\n            model: values.model,\r\n            year: values.year,\r\n            body_type: values.body_type,\r\n            colour: values.colour,\r\n            serviceType: values.serviceType,\r\n        });\r\n\r\n        axios\r\n            .post(SERVICE_URL, service)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    sessionStorage.setItem(\"service\", JSON.stringify(res.data.newService));\r\n                    setSuccess(true);\r\n                    setErrMsg(\"\");\r\n                    window.scrollTo(0, 0);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setSuccess(false);\r\n                setErrMsg(error.message);\r\n            });\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n    }) => {\r\n        return (\r\n            <>\r\n                <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 0, mb: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3, alignSelf: 'flex-start' }}>\r\n                        Personal Details\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                value={values.firstName}\r\n                                helperText={touched.firstName ? errors.firstName : \"\"}\r\n                                error={touched.firstName && Boolean(errors.firstName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                value={values.lastName}\r\n                                helperText={touched.lastName ? errors.lastName : \"\"}\r\n                                error={touched.lastName && Boolean(errors.lastName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"phoneNumber\"\r\n                                label=\"Phone Number\"\r\n                                value={values.phoneNumber}\r\n                                helperText={touched.phoneNumber ? errors.phoneNumber : \"\"}\r\n                                error={touched.phoneNumber && Boolean(errors.phoneNumber)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: MIN_LENGTH }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3, alignSelf: 'flex-start' }}>\r\n                        Address\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"suburb\"\r\n                                label=\"Suburb\"\r\n                                value={values.suburb}\r\n                                helperText={touched.suburb ? errors.suburb : \"\"}\r\n                                error={touched.suburb && Boolean(errors.suburb)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"crossRoad1\"\r\n                                label=\"Cross Road 1\"\r\n                                value={values.crossRoad1}\r\n                                helperText={touched.crossRoad1 ? errors.crossRoad1 : \"\"}\r\n                                error={touched.crossRoad1 && Boolean(errors.crossRoad1)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"crossRoad2\"\r\n                                label=\"Cross Road 2\"\r\n                                value={values.crossRoad2}\r\n                                helperText={touched.crossRoad2 ? errors.crossRoad2 : \"\"}\r\n                                error={touched.crossRoad2 && Boolean(errors.crossRoad2)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"streetNum\"\r\n                                label=\"Street Number\"\r\n                                type=\"number\"\r\n                                value={values.streetNum}\r\n                                helperText={touched.streetNum ? errors.streetNum : \"\"}\r\n                                error={touched.streetNum && Boolean(errors.streetNum)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"streetName\"\r\n                                label=\"Street Name\"\r\n                                value={values.streetName}\r\n                                helperText={touched.streetName ? errors.streetName : \"\"}\r\n                                error={touched.streetName && Boolean(errors.streetName)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, mb: 3, alignSelf: 'flex-start' }}>\r\n                        Car\r\n                    </Typography>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"plateNumber\"\r\n                                label=\"Plate Number\"\r\n                                value={values.plateNumber}\r\n                                helperText={touched.plateNumber ? errors.plateNumber : \"\"}\r\n                                error={touched.plateNumber && Boolean(errors.plateNumber)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: 6 }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"manufacturer\"\r\n                                label=\"Manufacturer\"\r\n                                value={values.manufacturer}\r\n                                helperText={touched.manufacturer ? errors.manufacturer : \"\"}\r\n                                error={touched.manufacturer && Boolean(errors.manufacturer)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"model\"\r\n                                label=\"Model\"\r\n                                value={values.model}\r\n                                helperText={touched.model ? errors.model : \"\"}\r\n                                error={touched.model && Boolean(errors.model)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"year\"\r\n                                label=\"Year\"\r\n                                value={values.year}\r\n                                helperText={touched.year ? errors.year : \"\"}\r\n                                error={touched.year && Boolean(errors.year)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                inputProps={{ maxLength: 4 }}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"body_type\"\r\n                                label=\"Body Type\"\r\n                                select\r\n                                value={values.body_type}\r\n                                helperText={touched.body_type ? errors.body_type : \"\"}\r\n                                error={touched.body_type && Boolean(errors.body_type)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange(\"body_type\")}\r\n                            >\r\n                                <MenuItem value={\"UTE\"}>UTE</MenuItem>\r\n                                <MenuItem value={\"HATCH\"}>HATCH</MenuItem>\r\n                                <MenuItem value={\"SUV\"}>SUV</MenuItem>\r\n                                <MenuItem value={\"SEDAN\"}>SEDAN</MenuItem>\r\n                                <MenuItem value={\"COUPE\"}>COUPE</MenuItem>\r\n                                <MenuItem value={\"WAGON\"}>WAGON</MenuItem>\r\n                                <MenuItem value={\"VAN\"}>VAN</MenuItem>\r\n                                <MenuItem value={\"CONVERTIBLE\"}>CONVERTIBLE</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                id=\"colour\"\r\n                                label=\"Colour\"\r\n                                value={values.colour}\r\n                                helperText={touched.colour ? errors.colour : \"\"}\r\n                                error={touched.colour && Boolean(errors.colour)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"serviceType\"\r\n                                label=\"Service Type\"\r\n                                select\r\n                                value={values.serviceType}\r\n                                helperText={touched.serviceType ? errors.serviceType : \"\"}\r\n                                error={touched.serviceType && Boolean(errors.serviceType)}\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                onChange={handleChange(\"serviceType\")}\r\n                            >\r\n                                <MenuItem value={\"Unknown\"}>Unknown</MenuItem>\r\n                                <MenuItem value={\"Flat Battery\"}>Flat Battery</MenuItem>\r\n                                <MenuItem value={\"Engine Overheating\"}>Engine Overheating</MenuItem>\r\n                                <MenuItem value={\"Car Won't Start\"}>Car Won't Start</MenuItem>\r\n                                <MenuItem value={\"Can't Get In Car\"}>Can't Get In Car</MenuItem>\r\n                                <MenuItem value={\"Flat Tyre\"}>Flat Tyre</MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <PaymentForm />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        disabled={isSubmitting}\r\n                        sx={{\r\n                            padding: \"8px 20px\",\r\n                            mt: 3,\r\n                            mb: 2,\r\n                        }}\r\n                    >\r\n                        Request Service\r\n                    </Button>\r\n                </Box>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            {success ? (<Redirect to='/service-request-confirm'></Redirect>) : (\r\n                <Container component=\"main\" maxWidth=\"sm\">\r\n                    <Paper variant=\"outlined\" sx={{ my: { xs: 6, md: 6 }, p: { xs: 2, md: 3 } }} >\r\n                        <Box\r\n                            sx={{\r\n                                marginTop: 2,\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <Typography component=\"h1\" variant=\"h4\">\r\n                                Request Service\r\n                            </Typography>{\" \"}\r\n                            <br />\r\n                            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                            <Formik\r\n                                initialValues={{\r\n                                    firstName: \"\",\r\n                                    lastName: \"\",\r\n                                    phoneNumber: \"\",\r\n                                    streetName: \"\",\r\n                                    streetNum: 1,\r\n                                    suburb: \"\",\r\n                                    crossRoad1: \"\",\r\n                                    crossRoad2: \"\",\r\n                                    plateNumber: \"\",\r\n                                    manufacturer: \"\",\r\n                                    model: \"\",\r\n                                    year: 2022,\r\n                                    body_type: \"SUV\",\r\n                                    colour: \"\",\r\n                                    serviceType: \"Unknown\"\r\n                                }}\r\n                                onSubmit={(values, { setSubmitting }) => {\r\n                                    submitForm(values);\r\n                                    setSubmitting(false);\r\n                                }}\r\n                                validationSchema={RequestFormSchema}\r\n                            >\r\n                                {form}\r\n                            </Formik>\r\n                        </Box>\r\n                    </Paper>\r\n                </Container>\r\n            )}\r\n            <Footer />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ServiceRequestCustomer; \r\n","// AboutSection page is the part of AboutUsCard which holds the content and manage its link\r\n\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction AboutSection (props) {\r\n    return (\r\n        <>\r\n            <li className=\"aboutSections-item\">\r\n                <Link className=\"aboutSections-item-link\" to={props.href}>\r\n                    <figure className=\"aboutSections-item-pic-wrap\">\r\n                        <img className=\"aboutSections-item-img\" alt=\"AboutSection\" src={props.src} />\r\n                    </figure>\r\n                    <div className=\"aboutSections-item-info\">\r\n                        <h5 className=\"aboutSections-item-text\">{props.text}</h5>\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutSection;\r\n","/* AboutUsCard is hold by the AboutUs page which includes all the component showed in AboutUs page\r\nThis page is also linked with AboutSection for the content and links attached with it */\r\n\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport \"./AboutSections.css\";\r\nimport AboutSection from \"../components/AboutSection\";\r\n\r\nconst AboutUsCard = () => {\r\n    return (\r\n        <>\r\n            <div className=\"aboutSections\">\r\n                <h1>About Us</h1>\r\n                <div className=\"aboutSections-container\">\r\n                    <div className=\"aboutSections-wrapper\">\r\n                        <ul className=\"aboutSections-items\">\r\n                            <AboutSection\r\n                                src=\"images/team.jpg\"\r\n                                text=\"Meet the team\"\r\n                                href=\"/meet-the-team\"\r\n                            />\r\n                            <AboutSection\r\n                                src=\"images/phone.jpg\"\r\n                                text=\"How it works\"\r\n                                href=\"/how-it-works\"\r\n                            />\r\n                            <AboutSection\r\n                                src=\"images/cogs.jpg\"\r\n                                text=\"Download user manual\"\r\n                                href=\"/user-manuals\"\r\n                            />\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AboutUsCard;","/* Simple about us home page to show the links for about us pages */\r\n\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport AboutUsCard from \"../components/AboutUsCard\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst AboutUs = () => {\r\n    return (\r\n        <>\r\n            <AboutUsCard />\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AboutUs;","import React, { useEffect } from \"react\";\r\nimport \"./Cards.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserManualCard = () => {\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"cards\">\r\n            <h1>User Manuals</h1>\r\n            <div className=\"cards__container\">\r\n                <div className=\"cards__wrapper\">\r\n                    <ul className=\"cards__items\">\r\n                        <li className=\"cards__item\">\r\n                            <Link className=\"cards__item__link\" \r\n                                to={{ pathname: \"https://drive.google.com/file/d/1Sb4pYg81K9ObN7_l8URLcmwf_Y1csKbb/view?usp=sharing\"}} target=\"_blank\">\r\n                                <figure className=\"cards__item__pic-wrap\">\r\n                                    <img className=\"cards__item__img\" alt=\"CardItem\" src='images/roadsideassistance.jpg' />\r\n                                </figure>\r\n                                <div className=\"cards__item__info\">\r\n                                    <h5 className=\"cards__item__text\">Assistance Professional user manual</h5>\r\n                                </div>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"cards__item\">\r\n                            <Link className=\"cards__item__link\" \r\n                                to={{ pathname: \"https://drive.google.com/file/d/1Sb4pYg81K9ObN7_l8URLcmwf_Y1csKbb/view?usp=sharing\"}} target=\"_blank\">\r\n                                <figure className=\"cards__item__pic-wrap\">\r\n                                    <img className=\"cards__item__img\" alt=\"CardItem\" src='images/motorist.jpg' />\r\n                                </figure>\r\n                                <div className=\"cards__item__info\">\r\n                                    <h5 className=\"cards__item__text\">Motorist user manual</h5>\r\n                                </div>\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserManualCard;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport UserManualCard from \"../components/UserManualCard\";\r\nimport Footer from \"../components/Footer\";\r\n\r\n// Displaying the two user manual buttons\r\nconst UserManuals = () => {\r\n  return (\r\n    <>\r\n      <UserManualCard />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserManuals;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport Footer from \"../components/Footer\";\r\nimport {\r\n    Box,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    Button,\r\n    Paper,\r\n    Typography,\r\n    CssBaseline,\r\n    Container,\r\n} from \"@mui/material\";\r\n\r\nconst steps = [\r\n    {\r\n        label: \"Request service\",\r\n        description: `Whether you're a member or not, go to 'Request Service' and complete \r\n                         the form. `,\r\n    },\r\n    {\r\n        label: \"Payment\",\r\n        description: `Once your new request has been created, you will be prompted to make a\r\n                        payment if you are not a member.`,\r\n    },\r\n    {\r\n        label: \"Assistance Professional will come to you\",\r\n        description: `An assistance professional will see and accept your request, given your\r\n                        location and details of service needed. You will then recieve the details\r\n                         of the Assistance Professional that is coming to you.`,\r\n    },\r\n    {\r\n        label: \"Leave a Review\",\r\n        description: `Once the service is complete, leave a review.`,\r\n    },\r\n];\r\n\r\nconst HowItWorks = () => {\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <React.Fragment>\r\n                <CssBaseline />\r\n                <Container maxwidth={600} height={90}>\r\n                    <Box\r\n                        p={5}\r\n                        m={10}\r\n                        sx={{\r\n                            mx: \"auto\",\r\n                            maxWidth: 600,\r\n                            bgcolor: \"secondary.main\",\r\n                            borderRadius: 10,\r\n                        }}\r\n                    >\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            How it works\r\n                        </Typography>\r\n                        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                            {steps.map((step, index) => (\r\n                                <Step key={step.label}>\r\n                                    <StepLabel\r\n                                        optional={\r\n                                            index === 3 ? (\r\n                                                <Typography variant=\"caption\">Last step</Typography>\r\n                                            ) : null\r\n                                        }\r\n                                    >\r\n                                        {step.label}\r\n                                    </StepLabel>\r\n                                    <StepContent>\r\n                                        <Typography>{step.description}</Typography>\r\n                                        <Box sx={{ mb: 2 }}>\r\n                                            <div>\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    onClick={handleNext}\r\n                                                    sx={{ mt: 1, mr: 1 }}\r\n                                                >\r\n                                                    {index === steps.length - 1 ? \"Finish\" : \"Continue\"}\r\n                                                </Button>\r\n                                                <Button\r\n                                                    disabled={index === 0}\r\n                                                    onClick={handleBack}\r\n                                                    sx={{ mt: 1, mr: 1 }}\r\n                                                >\r\n                                                    Back\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Box>\r\n                                    </StepContent>\r\n                                </Step>\r\n                            ))}\r\n                        </Stepper>\r\n                        {activeStep === steps.length && (\r\n                            <Paper square elevation={0} sx={{ p: 3 }}>\r\n                                <Typography>\r\n                                    All steps completed - you&apos;re finished\r\n                                </Typography>\r\n                                <Button onClick={handleReset} sx={{ mt: 1, mr: 1 }}>\r\n                                    Reset\r\n                                </Button>\r\n                            </Paper>\r\n                        )}\r\n                    </Box>\r\n                </Container>\r\n            </React.Fragment>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HowItWorks;\r\n","/* Meet the team */\r\n\r\nimport React from 'react';\r\n\r\nimport {\r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Box,\r\n    Avatar,\r\n} from \"@mui/material\";\r\nimport { Container } from '@mui/system';\r\n\r\nconst members = [\r\n    {\r\n        name: 'Juilet Gorban',\r\n        flag: 'Front-end, Documentation',\r\n        course: 'Bachelor of Computer Science (SENG), Creative Arts (VAD)',\r\n    },\r\n    {\r\n        name: 'Cayden Darley',\r\n        flag: 'Front-end, Back-end, Database',\r\n        course: 'Bachelor of Computer Science (GMDV,CS42)',\r\n    },\r\n    {\r\n        name: 'Benjamin Le',\r\n        flag: 'Back-end, Database',\r\n        course: 'Bachelor of Information Technology (NDM)',\r\n    },\r\n    {\r\n        name: 'Dylan Weber-Freel',\r\n        flag: 'Front-end, Back-end, Database',\r\n        course: 'Bachelor of Computer Science (GMD)',\r\n    },\r\n    {\r\n        name: 'Lyon Fan',\r\n        flag: 'Back-end, Database',\r\n        course: 'Bachelor of Computer Science (DSS)',\r\n    },\r\n    {\r\n        name: 'James Logan',\r\n        flag: 'Back-end, Database',\r\n        course: 'Bachelor of Computer Science (DSS)',\r\n    },\r\n    {\r\n        name: 'Quoc Tuan Nguyen',\r\n        flag: 'Testing, Back-end',\r\n        course: 'Bachelor of Computer Science',\r\n    },\r\n    {\r\n        name: 'Sukru Kaymak',\r\n        flag: 'Documentation',\r\n        course: 'Bachelor of Information Technology (NDM)',\r\n    },\r\n    {\r\n        name: 'Nathan Meacham',\r\n        flag: 'Documentation',\r\n        course: 'Bachelor of Computer Science',\r\n    },\r\n];\r\n\r\nconst Team = () => (\r\n    <>\r\n        <Box\r\n            component=\"main\"\r\n            sx={{\r\n                flexGrow: 1,\r\n                py: 8,\r\n            }}\r\n        >\r\n            <Container maxWidth=\"lg\">\r\n                <Typography sx={{ mb: 3 }} variant=\"h4\">\r\n                    Meet the Team\r\n                </Typography>\r\n                <Grid container spacing={10}>\r\n                    {members.map(member => (\r\n                        <Grid key={member.name} item xs={12} md={4}>\r\n                            <Paper>\r\n                                <Grid item>\r\n                                    <Avatar src={`images/people/${member.name}.jpg`}\r\n                                        sx={{ ml: 2, width: 56, height: 56 }} />\r\n                                </Grid>\r\n                                <Grid container wrap=\"nowrap\">\r\n                                    <Grid item sx={{ margin: '10px' }}>\r\n                                        <Typography component=\"h2\" variant=\"h5\">\r\n                                            {member.name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                                            <b>{member.flag}</b>\r\n                                        </Typography>\r\n                                        <Typography color=\"textSecondary\">{member.course}</Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n    </>\r\n);\r\n\r\nexport default Team;\r\n","/* MeetTheTeam is a page that shows profile of all the team members and it holds the Team from component */ \r\n/* It also contains footer to display at the end of the page */ \r\n\r\nimport React from \"react\";\r\nimport \"../App.css\";\r\nimport Footer from \"../components/Footer\";\r\nimport Team from \"../components/Team\";\r\n\r\nconst MeetTheTeam = () => {\r\n    return (\r\n        <>\r\n            <Team />\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MeetTheTeam;\r\n","import React from 'react';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// convert the user's full name into a random colour for the profile picture\r\nfunction stringToColour(string) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let colour = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        colour += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    return colour;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColour(name),\r\n            height: 64,\r\n            mb: 2,\r\n            width: 64,\r\n        },\r\n        children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\r\n    };\r\n}\r\n\r\nconst AccountProfile = () => {\r\n\r\n    var userType = Object.keys(sessionStorage)[0];\r\n    const user = JSON.parse(sessionStorage.getItem(userType));\r\n\r\n    if (!user)\r\n        return (<></>);\r\n\r\n    return (\r\n        <>\r\n            <Box>\r\n                <Card variant=\"outlined\">\r\n                    <CardContent>\r\n                        <Box\r\n                            sx={{\r\n                                alignItems: 'center',\r\n                                display: 'flex',\r\n                                flexDirection: 'column'\r\n                            }}\r\n                        >\r\n                            <Avatar {...stringAvatar(`${user.firstName} ${user.lastName}`)} />\r\n                            <Typography\r\n                                color=\"textPrimary\"\r\n                                gutterBottom\r\n                                variant=\"h5\"\r\n                            >\r\n                                {`${user.firstName} ${user.lastName}`}\r\n                            </Typography>\r\n                            <Typography\r\n                                color=\"textSecondary\"\r\n                                variant=\"body2\"\r\n                            >\r\n                                <i className=\"fas fa-envelope\"></i> {user.email}\r\n                            </Typography>\r\n                            <Typography\r\n                                color=\"textSecondary\"\r\n                                variant=\"body2\"\r\n                            >\r\n                                <i className=\"fas fa-phone\"></i> {user.phoneNumber}\r\n                            </Typography>\r\n                        </Box>\r\n                    </CardContent>\r\n                    <Divider />\r\n                </Card>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountProfile; ","import React, { useState } from 'react';\r\nimport { Formik } from \"formik\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    Divider,\r\n    Grid,\r\n    TextField,\r\n    Alert\r\n} from '@mui/material';\r\n\r\nimport * as Yup from \"yup\";\r\nimport axios from \"../../api/axios\";\r\nimport { parse, isDate } from \"date-fns\";\r\n\r\n// check if DOB is real date \r\nfunction parseDateString(value, originalValue) {\r\n    const parsedDate = isDate(originalValue)\r\n        ? originalValue\r\n        : parse(originalValue, \"yyyy-MM-dd\", new Date());\r\n\r\n    return parsedDate;\r\n}\r\n\r\nconst MIN_LENGTH = 10;\r\nconst phoneReg =\r\n    /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nconst nameReg = /^[a-zA-Z]+$/;\r\n\r\n// schema to handle form validation\r\nconst SignUpSchema = Yup.object().shape({\r\n    firstName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    lastName: Yup.string().required(\"Required\").matches(nameReg, \"Only letters\"),\r\n    dob: Yup.date()\r\n        .transform(parseDateString)\r\n        .max(new Date())\r\n        .required(\"Required\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    phoneNumber: Yup.string()\r\n        .required(\"Required\")\r\n        .matches(phoneReg, \"Phone number invalid\")\r\n        .min(10, \"Phone number must be 10 digits\")\r\n        .max(10, \"Phone number must be 10 digits\"),\r\n    password: Yup.string()\r\n        .required(\"Required\")\r\n        .min(4, \"​Password must be at least 4 characters\"),\r\n});\r\n\r\nconst AccountProfileDetails = () => {\r\n\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    var userType = Object.keys(sessionStorage)[0];\r\n    const user = JSON.parse(sessionStorage.getItem(userType));\r\n    var EDIT_URL = '/edit/' + userType + '/';\r\n\r\n    if (!user)\r\n        setErrMsg(\"Cannot retrieve user!\");\r\n\r\n    // send data to backend and handle response \r\n    const submitForm = (values) => {\r\n        axios\r\n            .put(EDIT_URL + `${user._id}`, values)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    setSuccess(true);\r\n                    sessionStorage.setItem(userType, JSON.stringify(res.data.docs));\r\n                    window.location.reload();\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                setSuccess(false);\r\n                setErrMsg(error.message);\r\n            });\r\n    };\r\n\r\n    const form = ({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleSubmit,\r\n    }) => {\r\n        return (\r\n            <Box>\r\n                <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Card variant=\"outlined\">\r\n                        <CardHeader\r\n                            subheader=\"The information can be edited\"\r\n                            title=\"Profile\"\r\n                        />\r\n                        <Divider />\r\n                        <CardContent>\r\n                            <Grid\r\n                                container\r\n                                spacing={3}\r\n                            >\r\n                                <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                >\r\n                                    <TextField\r\n                                        id=\"firstName\"\r\n                                        label=\"First Name\"\r\n                                        value={values.firstName}\r\n                                        helperText={touched.firstName ? errors.firstName : \"\"}\r\n                                        error={touched.firstName && Boolean(errors.firstName)}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                >\r\n                                    <TextField\r\n                                        id=\"lastName\"\r\n                                        label=\"Last Name\"\r\n                                        value={values.lastName}\r\n                                        helperText={touched.lastName ? errors.lastName : \"\"}\r\n                                        error={touched.lastName && Boolean(errors.lastName)}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                >\r\n                                    <TextField\r\n                                        id=\"email\"\r\n                                        label=\"Email\"\r\n                                        type=\"email\"\r\n                                        value={values.email}\r\n                                        helperText={touched.email ? errors.email : \"\"}\r\n                                        error={touched.email && Boolean(errors.email)}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                >\r\n                                    <TextField\r\n                                        id=\"phoneNumber\"\r\n                                        label=\"Phone Number\"\r\n                                        type=\"number\"\r\n                                        value={values.phoneNumber}\r\n                                        helperText={touched.phoneNumber ? errors.phoneNumber : \"\"}\r\n                                        error={touched.phoneNumber && Boolean(errors.phoneNumber)}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        inputProps={{ maxLength: MIN_LENGTH }}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                >\r\n                                    <TextField\r\n                                        id=\"dob\"\r\n                                        label=\"Date of Birth\"\r\n                                        type=\"date\"\r\n                                        value={values.dob}\r\n                                        helperText={touched.dob ? errors.dob : \"\"}\r\n                                        error={touched.dob && Boolean(errors.dob)}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        onChange={handleChange}\r\n                                        inputProps={{\r\n                                            min: \"1899-01-01\",\r\n                                            max: new Date().toISOString().split(\"T\")[0],\r\n                                        }}\r\n                                        InputLabelProps={{ shrink: true }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid\r\n                                    item\r\n                                    md={6}\r\n                                    xs={12}\r\n                                >\r\n                                    <TextField\r\n                                        id=\"password\"\r\n                                        label=\"Password\"\r\n                                        type=\"password\"\r\n                                        value={values.password}\r\n                                        helperText={touched.password ? errors.password : \"\"}\r\n                                        error={touched.password && Boolean(errors.password)}\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </CardContent>\r\n                        <Divider />\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'flex-end',\r\n                                p: 2\r\n                            }}\r\n                        >\r\n                            <Button\r\n                                type=\"submit\"\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                size=\"medium\"\r\n                            >\r\n                                Save details\r\n                            </Button>\r\n                        </Box>\r\n                    </Card>\r\n                </form>\r\n            </Box>\r\n        )\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n            {success ? <Alert severity=\"success\">{\"Changed details successfully\"}</Alert> : \"\"}\r\n            <Formik\r\n                initialValues={{\r\n                    firstName: `${user.firstName}`,\r\n                    lastName: `${user.lastName}`,\r\n                    dob: new Date(`${user.dob}`).toISOString().split(\"T\")[0],\r\n                    email: `${user.email}`,\r\n                    password: `${user.password}`,\r\n                    phoneNumber: `${user.phoneNumber}`,\r\n                }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    submitForm(values);\r\n                    setSubmitting(false);\r\n                }}\r\n                validationSchema={SignUpSchema}\r\n            >\r\n                {form}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountProfileDetails; ","/* Account component to display on both assistance professional and member dashboard */ \r\n\r\nimport React from \"react\";\r\nimport { Box, Container, Grid, Typography } from \"@mui/material\";\r\nimport AccountProfile from \"./AccountProfile\";\r\nimport AccountProfileDetails from \"./AccountDetails\";\r\n\r\nconst Account = () => (\r\n    <>\r\n        <Box\r\n            component=\"main\"\r\n            sx={{\r\n                flexGrow: 1,\r\n                py: 8,\r\n            }}\r\n        >\r\n            <Container maxWidth=\"lg\">\r\n                <Typography sx={{ mb: 3 }} variant=\"h4\">\r\n                    Account\r\n                </Typography>\r\n                <Grid container spacing={3}>\r\n                    <Grid item lg={4} md={6} xs={12}>\r\n                        <AccountProfile />\r\n                    </Grid>\r\n                    <Grid item lg={8} md={6} xs={12}>\r\n                        <AccountProfileDetails />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n    </>\r\n);\r\n\r\nexport default Account;\r\n","/* Display receipts within the member dashboard */\r\n\r\nimport React from \"react\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n} from \"@mui/material\";\r\nimport ReceiptIcon from '@mui/icons-material/Receipt';\r\n\r\nconst Receipts = () => {\r\n\r\n    var smUser = JSON.parse(sessionStorage.getItem(\"member\"));\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component=\"main\"\r\n                sx={{\r\n                    flexGrow: 1,\r\n                    py: 8,\r\n                }}\r\n            >\r\n                <Container maxWidth=\"lg\">\r\n                    <Typography sx={{ mb: 3 }} variant=\"h4\">\r\n                        Receipts\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\r\n                                {smUser.receipts.map((list) => (\r\n                                    <ListItem sx={{ width: \"100%\" }} key={list._id}>\r\n                                        <ListItemAvatar>\r\n                                            <ReceiptIcon fontSize=\"large\"></ReceiptIcon>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={list.serviceType}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        sx={{ display: \"inline\", mr: 2 }}\r\n                                                        component=\"span\"\r\n                                                        color=\"text.primary\"\r\n                                                    >\r\n                                                        Payment Date: <b>{list.paymentDate}</b>\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        sx={{ display: \"inline\", mr: 2 }}\r\n                                                        component=\"span\"\r\n                                                        color=\"text.primary\"\r\n                                                    >\r\n                                                        Payment Amt: <b>${list.amountPaid}</b>\r\n                                                    </Typography>\r\n                                                    <Typography\r\n                                                        sx={{ display: \"inline\", mr: 2 }}\r\n                                                        component=\"span\"\r\n                                                        color=\"text.secondary\"\r\n                                                    >\r\n                                                        Service Purchased: <b>{list.servicePurchased}</b>\r\n                                                    </Typography>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Receipts;\r\n","import React from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Account from \"../components/account/Account\";\r\nimport Receipts from \"../components/Receipts\";\r\n\r\nconst MotoristDashboard = () => {\r\n    const user = JSON.parse(sessionStorage.getItem(\"member\"));\r\n\r\n    // if user is not logged in as an subscribed member, redirect home \r\n    return (\r\n        <>\r\n            {!user ? <Redirect to=\"/\"></Redirect> :\r\n                <>\r\n                    <Account />\r\n                    <Receipts />\r\n                </>\r\n            }\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MotoristDashboard;\r\n","/* Apart of the assistance professional dashboard where they can accept or deny\r\nservice requests (jobs) from their own personal list */ \r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Button,\r\n    Alert\r\n} from \"@mui/material\";\r\nimport CarCrashIcon from \"@mui/icons-material/CarCrash\";\r\nimport axios from \"../api/axios\";\r\n\r\nconst ASSIGN_URL = \"/assign/assistance-professional/\";\r\nconst DENY_URL = \"/deny/assistance-professional/\";\r\n\r\nfunction setService(list_id) {\r\n    var apUser = JSON.parse(sessionStorage.getItem(\"ap\"));\r\n    const setService = {\r\n        assistProfID: apUser.assistProfID,\r\n        serviceID: list_id.jobID,\r\n    };\r\n    return setService;\r\n}\r\n\r\nconst AvailableJobs = () => {\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    var apUser = JSON.parse(sessionStorage.getItem(\"ap\"));\r\n\r\n    // send data to backend and handle response \r\n    const acceptService = (values) => {\r\n        axios\r\n            .put(ASSIGN_URL + `${apUser._id}`, values)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    setSuccess(true);\r\n                    sessionStorage.setItem(\"ap\", JSON.stringify(res.data.doc));\r\n                    window.scrollTo(500, 500); // scroll to top of jobs\r\n                    window.location.reload(true);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setSuccess(false);\r\n                setErrMsg(err.message);\r\n            });\r\n    };\r\n\r\n    // send data to backend and handle response \r\n    const denyService = (values) => {\r\n        axios\r\n            .put(DENY_URL + `${apUser._id}`, values)\r\n            .then((res) => {\r\n                if (res.data.result === \"success\") {\r\n                    setSuccess(true);\r\n                    sessionStorage.setItem(\"ap\", JSON.stringify(res.data.doc));\r\n                    window.scrollTo(500, 500); // scroll to top of jobs\r\n                    window.location.reload(true);\r\n                } else if (res.data.result === \"error\") {\r\n                    setSuccess(false);\r\n                    setErrMsg(res.data.message);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                setSuccess(false);\r\n                setErrMsg(err.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                component=\"main\"\r\n                sx={{\r\n                    flexGrow: 1,\r\n                    py: 8,\r\n                }}\r\n            >\r\n                <Container maxWidth=\"lg\">\r\n                    <Typography sx={{ mb: 3 }} variant=\"h4\">\r\n                        Available Jobs\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            {errMsg ? <Alert severity=\"error\">{errMsg}</Alert> : \"\"}\r\n                            {success ? (\r\n                                <Alert severity=\"success\">{\"Done\"}</Alert>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                            <List sx={{ width: \"100%\", bgcolor: \"background.paper\" }}>\r\n                                {apUser.availableJobs.map((list) => (\r\n                                    <ListItem sx={{ width: \"100%\" }} key={list._id}>\r\n                                        <ListItemAvatar>\r\n                                            <CarCrashIcon fontSize=\"large\"></CarCrashIcon>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={list.serviceType}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        sx={{ display: \"inline\", mr: 2 }}\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        color=\"text.primary\"\r\n                                                    >\r\n                                                        Distance: <b>{list.distanceFromAP}km</b>\r\n                                                    </Typography>\r\n                                                    Car: <b>{list.plateNumber}</b>\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            onClick={() => acceptService({\r\n                                                assistProfID: apUser.assistProfID,\r\n                                                serviceID: list.jobID,\r\n                                            })}\r\n                                        >\r\n                                            Accept\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            color=\"error\"\r\n                                            sx={{ ml: 2 }}\r\n                                            onClick={() => denyService(setService(list))}\r\n                                        >\r\n                                            Deny\r\n                                        </Button>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AvailableJobs;\r\n","import React from \"react\";\r\nimport Footer from \"../components/Footer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Account from \"../components/account/Account\";\r\nimport AvailableJobs from \"../components/AvailableJobs\";\r\n\r\nconst APDashboard = () => {\r\n    const user = JSON.parse(sessionStorage.getItem(\"ap\"));\r\n\r\n    // if user is not logged in as an AP, redirect home \r\n    return (\r\n        <>\r\n            {!user ? <Redirect to=\"/\"></Redirect> : \r\n            <>\r\n                <Account />\r\n                <AvailableJobs />\r\n            </>}\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default APDashboard; ","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const Theme = createTheme ({\r\n    components: {\r\n      MuiBox: {\r\n        styleOverrides: {\r\n          root: {\r\n            borderRadius: 15,\r\n            boxShadow: 3\r\n          }\r\n        }\r\n      },\r\n      MuiCard: {\r\n        styleOverrides: {\r\n          root: {\r\n            borderRadius: 15,\r\n            boxShadow: 3\r\n          }\r\n        }\r\n      },\r\n      MuiPaper: {\r\n        styleOverrides: {\r\n          root: {\r\n            borderRadius: 15,\r\n            boxShadow: 3,\r\n          }\r\n        }\r\n      },\r\n      MuiAlert: {\r\n        styleOverrides: {\r\n          root: {\r\n            borderRadius: 15,\r\n          }\r\n        }\r\n      },\r\n      MuiButton: {\r\n        defaultProps: {\r\n          disableElevation: true\r\n        },\r\n        styleOverrides: {\r\n          root: {\r\n            textTransform: 'none'\r\n          },\r\n          sizeSmall: {\r\n            padding: '6px 16px'\r\n          },\r\n          sizeMedium: {\r\n            padding: '8px 20px'\r\n          },\r\n          sizeLarge: {\r\n            padding: '11px 24px'\r\n          },\r\n          textSizeSmall: {\r\n            padding: '7px 12px'\r\n          },\r\n          textSizeMedium: {\r\n            padding: '9px 16px'\r\n          },\r\n          textSizeLarge: {\r\n            padding: '12px 16px'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    palette: {\r\n      type: 'light',\r\n      primary: {\r\n        main: '#1f351c',\r\n      },\r\n      secondary: {\r\n        main: '#80b979',\r\n      },\r\n    },\r\n    typography: {\r\n      fontFamily: '\"Inter\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\"',\r\n      body1: {\r\n        fontSize: '1rem',\r\n        fontWeight: 400,\r\n        lineHeight: 1.5\r\n      },\r\n      body2: {\r\n        fontSize: '0.875rem',\r\n        fontWeight: 400,\r\n        lineHeight: 1.57\r\n      },\r\n      subtitle1: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        lineHeight: 1.75\r\n      },\r\n      subtitle2: {\r\n        fontSize: '0.875rem',\r\n        fontWeight: 500,\r\n        lineHeight: 1.57\r\n      },\r\n      overline: {\r\n        fontSize: '0.75rem',\r\n        fontWeight: 600,\r\n        letterSpacing: '0.5px',\r\n        lineHeight: 2.5,\r\n        textTransform: 'uppercase'\r\n      },\r\n      caption: {\r\n        fontSize: '0.75rem',\r\n        fontWeight: 400,\r\n        lineHeight: 1.66\r\n      },\r\n      h1: {\r\n        fontWeight: 700,\r\n        fontSize: '3.5rem',\r\n        lineHeight: 1.375\r\n      },\r\n      h2: {\r\n        fontWeight: 700,\r\n        fontSize: '3rem',\r\n        lineHeight: 1.375\r\n      },\r\n      h3: {\r\n        fontWeight: 700,\r\n        fontSize: '2.25rem',\r\n        lineHeight: 1.375\r\n      },\r\n      h4: {\r\n        fontWeight: 700,\r\n        fontSize: '2rem',\r\n        lineHeight: 1.375\r\n      },\r\n      h5: {\r\n        fontWeight: 600,\r\n        fontSize: '1.5rem',\r\n        lineHeight: 1.375\r\n      },\r\n      h6: {\r\n        fontWeight: 600,\r\n        fontSize: '1.125rem',\r\n        lineHeight: 1.375\r\n      }, \r\n      fontSize: 14,\r\n      button: {\r\n        fontSize: 16,\r\n        fontWeight: 500, \r\n      },\r\n    },\r\n  }\r\n); \r\n","import React from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport \"./App.css\";\r\nimport Home from \"./pages/Home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport RequestService from \"./pages/RequestService\";\r\nimport RequestServiceConfirmation from \"./pages/RequestServiceConfirmation\";\r\nimport RequestServiceResult from \"./pages/RequestServiceResult\";\r\nimport ServiceReceipt from \"./pages/ServiceReceipt\";\r\nimport Login from \"./pages/Login\";\r\nimport LoginMotorist from \"./pages/LoginMotorist\";\r\nimport LoginAP from \"./pages/LoginAP\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport SignUpMotorist from \"./pages/SignUpMotorist\";\r\nimport SignUpAP from \"./pages/SignUpAP\";\r\nimport ServiceRequestMember from \"./pages/ServiceRequestMember\";\r\nimport ServiceRequestCustomer from \"./pages/ServiceRequestCustomer\";\r\nimport AboutUs from \"./pages/AboutUs\";\r\nimport UserManuals from \"./pages/UserManuals\";\r\nimport HowItWorks from \"./pages/HowItWorks\";\r\nimport MeetTheTeam from \"./pages/MeetTheTeam\";\r\nimport MotoristDashboard from \"./pages/MotoristDashboard\";\r\nimport APDashboard from \"./pages/APDashboard\";\r\nimport Account from \"./components/account/Account\";\r\nimport { Theme } from \"./components/Theme\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={Theme}>\r\n        <Router>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/about-us\" component={AboutUs} />\r\n            <Route path=\"/user-manuals\" component={UserManuals} />\r\n            <Route path=\"/how-it-works\" component={HowItWorks} />\r\n            <Route path=\"/meet-the-team\" component={MeetTheTeam} />\r\n            <Route path=\"/service-request\" component={RequestService} />\r\n            <Route\r\n              path=\"/service-request-customer\"\r\n              component={ServiceRequestCustomer}\r\n            />\r\n            <Route\r\n              path=\"/service-request-member\"\r\n              component={ServiceRequestMember}\r\n            />\r\n            <Route\r\n              path=\"/service-request-confirm\"\r\n              component={RequestServiceConfirmation}/>\r\n            <Route\r\n              path=\"/service-request-result\"\r\n              component={RequestServiceResult}/>\r\n            <Route path=\"/service-receipt\" component={ServiceReceipt} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/login-motorist\" component={LoginMotorist} />\r\n            <Route path=\"/login-ap\" component={LoginAP} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <Route path=\"/signup-ap\" component={SignUpAP} />\r\n            <Route path=\"/signup-motorist\" component={SignUpMotorist} />\r\n            <Route path=\"/member-dashboard\" component={MotoristDashboard} />\r\n            <Route path=\"/ap-dashboard\" component={APDashboard} />\r\n            <Route path=\"/account\" component={Account} />\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { AuthContextProvider } from \"./context/AuthContext\";\r\nimport { StatusContextProvider } from \"./context/StatusContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StatusContextProvider>\r\n      <AuthContextProvider>\r\n        <App />\r\n      </AuthContextProvider>\r\n    </StatusContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}